{"version":3,"sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/PopoverTitle.js","../node_modules/react-bootstrap/esm/PopoverContent.js","../node_modules/react-bootstrap/esm/Popover.js","Demo/UIElements/Basic/TooltipsPopovers.js","../node_modules/react-overlays/esm/useWaitForDOMRef.js"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","PopoverTitle","React","forwardRef","_ref","ref","_ref$as","as","Component","bsPrefix","className","children","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","PopoverContent","Popover","placement","style","content","arrowProps","popper","show","decoratedBsPrefix","primaryPlacement","split","role","defaultProps","Title","Content","TooltipsPopovers","render","htmlTitle","Row","Col","md","Card","Header","Body","OverlayTrigger","overlay","Tooltip","id","Button","variant","trigger","title","resolveContainerRef","document","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","_useState","useState","resolvedRef","setRef","earlyRef","nextRef"],"mappings":"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","file":"static/js/148.5716caa8.chunk.js","sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverTitle = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-header');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(bsPrefix, className)\n  }), children);\n});\nexport default PopoverTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar PopoverContent = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'popover-body');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nexport default PopoverContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PopoverTitle from './PopoverTitle';\nimport PopoverContent from './PopoverContent';\nvar defaultProps = {\n  placement: 'right'\n};\nvar Popover = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      placement = _ref.placement,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      content = _ref.content,\n      arrowProps = _ref.arrowProps,\n      _ = _ref.popper,\n      _1 = _ref.show,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"placement\", \"className\", \"style\", \"children\", \"content\", \"arrowProps\", \"popper\", \"show\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n\n  var _ref2 = (placement == null ? void 0 : placement.split('-')) || [],\n      primaryPlacement = _ref2[0];\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && \"bs-popover-\" + primaryPlacement)\n  }, props), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"arrow\"\n  }, arrowProps)), content ? /*#__PURE__*/React.createElement(PopoverContent, null, children) : children);\n});\nPopover.defaultProps = defaultProps;\nPopover.Title = PopoverTitle;\nPopover.Content = PopoverContent;\nexport default Popover;","import React, {Component} from 'react';\r\nimport {Row, Col, Card, Button, OverlayTrigger, Tooltip, Popover } from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nclass TooltipsPopovers extends Component {\r\n    render() {\r\n        const htmlTitle = (<span><i>Popover</i> <u>with</u> <strong>HTML</strong></span>);\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Tooltip</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <OverlayTrigger\r\n                                    placement='top'\r\n                                    overlay={<Tooltip id={`tooltip-top`}>Tooltip on top</Tooltip>}\r\n                                >\r\n                                    <Button variant=\"light\">Top</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    placement='left'\r\n                                    overlay={<Tooltip id={`tooltip-left`}>Tooltip on left</Tooltip>}\r\n                                >\r\n                                    <Button variant=\"primary\">Left</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    placement='right'\r\n                                    overlay={<Tooltip id={`tooltip-right`}>Tooltip on right</Tooltip>}\r\n                                >\r\n                                    <Button variant=\"success\">Right</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    placement='bottom'\r\n                                    overlay={<Tooltip id={`tooltip-bottom`}>Tooltip on bottom</Tooltip>}\r\n                                >\r\n                                    <Button variant=\"warning\">Bottom</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    placement='top'\r\n                                    overlay={<Tooltip id={`tooltip-top`}><i>Tooltip</i> <u>with</u> <strong>HTML</strong></Tooltip>}\r\n                                >\r\n                                    <Button variant=\"primary\">HTML Tooltip</Button>\r\n                                </OverlayTrigger>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Popover</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <OverlayTrigger\r\n                                    trigger=\"click\"\r\n                                    placement='top'\r\n                                    overlay={\r\n                                        <Popover id={`popover-positioned-top`} title={`Popover on top`}>top by popover</Popover>\r\n                                    }\r\n                                >\r\n                                    <Button variant=\"light\">Top</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    trigger=\"click\"\r\n                                    placement='left'\r\n                                    overlay={\r\n                                        <Popover id={`popover-positioned-left`} title={`Popover on left`}>left by popover</Popover>\r\n                                    }\r\n                                >\r\n                                    <Button variant=\"primary\">Left</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    trigger=\"click\"\r\n                                    placement='right'\r\n                                    overlay={\r\n                                        <Popover id={`popover-positioned-right`} title={`Popover on right`}>right by popover</Popover>\r\n                                    }\r\n                                >\r\n                                    <Button variant=\"success\">Right</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    trigger=\"click\"\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Popover id={`popover-positioned-bottom`} title={`Popover on bottom`}>bottom by popover</Popover>\r\n                                    }\r\n                                >\r\n                                    <Button variant=\"warning\">Bottom</Button>\r\n                                </OverlayTrigger>\r\n                                <OverlayTrigger\r\n                                    trigger=\"click\"\r\n                                    placement='top'\r\n                                    overlay={\r\n                                        <Popover id={`popover-positioned-html`} title={htmlTitle}>popover by HTML</Popover>\r\n                                    }\r\n                                >\r\n                                    <Button variant=\"primary\">HTML Popover</Button>\r\n                                </OverlayTrigger>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TooltipsPopovers;","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}"],"sourceRoot":""}