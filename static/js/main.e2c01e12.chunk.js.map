{"version":3,"sources":["config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","index.js"],"names":["defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","loader","className","Aux","props","children","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","LAYOUT_TYPE","RESET","NAV_BACK_COLOR","NAV_BACK_IMAGE","NAV_BRAND_COLOR","HEADER_BACK_COLOR","NAV_ICON_COLOR","LAYOUT6_BACKGROUND","RTL_LAYOUT","NAV_FIXED_LAYOUT","HEADER_FIXED_LAYOUT","BOX_LAYOUT","NAV_DROPDOWN_ICON","NAV_LIST_ICON","NAV_ACTIVE_LIST_COLOR","NAV_LIST_TITLE_COLOR","NAV_LIST_TITLE_HIDE","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","CONFIG_BLOCK","CHANGE_PRE_LAYOUT","ScrollToTop","React","Component","componentDidUpdate","prevProps","this","location","window","scrollTo","render","withRouter","Landing","lazy","SignUp1","SignUp2","SignUp3","SignUp4","SignUp5","Signin1","Signin2","Signin3","Signin4","Signin5","ResetPassword1","ResetPassword2","ResetPassword3","ResetPassword4","ResetPassword5","ChangePassword","PersonalInfo","ProfileSettings","MapForm","Subscribe","Error","OfflineUI","route","path","exact","name","component","AdminLayout","Loadable","loading","Loader","App","menu","routes","map","index","Route","key","fallback","Switch","Boolean","hostname","match","initialState","isOpen","isTrigger","config","isFullScreen","reducer","state","action","trigger","open","type","actionTypes","triggerIndex","indexOf","id","filter","item","value","store","createStore","app","HashRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2c01e12.chunk.js","sourcesContent":["export default {\r\n    defaultPath: 'auth/signin-2',\r\n    basename: 'SPIPaaS', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal\r\n    preLayout: '', // null, layout-2, layout-2-2, layout-3, layout-4, layout-4-2, layout-6, layout-8\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, menu-light, dark\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, header-blue, header-red, header-purple, header-lightblue, header-dark\r\n    navBackColor: 'navbar-default', // navbar-default, navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark\r\n    navBrandColor: 'brand-default', // brand-default, brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark\r\n    navBackImage: false, // false, navbar-image-1, navbar-image-2, navbar-image-3, navbar-image-4, navbar-image-5\r\n    rtlLayout: false,\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false,\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, style2, style3\r\n    navListIcon: 'style1', // style1, style2, style3, style4, style5, style6\r\n    navActiveListColor: 'active-default', // active-default, active-blue, active-red, active-purple, active-lightblue, active-dark\r\n    navListTitleColor: 'title-default', // title-default, title-blue, title-red, title-purple, title-lightblue, title-dark\r\n    navListTitleHide: false,\r\n    configBlock: false,\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const LAYOUT_TYPE = 'LAYOUT_TYPE';\r\nexport const RESET = 'RESET';\r\nexport const NAV_BACK_COLOR = 'NAV_BACK_COLOR';\r\nexport const NAV_BACK_IMAGE = 'NAV_BACK_IMAGE';\r\nexport const NAV_BRAND_COLOR = 'NAV_BRAND_COLOR';\r\nexport const HEADER_BACK_COLOR = 'HEADER_BACK_COLOR';\r\nexport const NAV_ICON_COLOR = 'NAV_ICON_COLOR';\r\nexport const LAYOUT6_BACKGROUND = 'LAYOUT6_BACKGROUND';\r\nexport const RTL_LAYOUT = 'RTL_LAYOUT';\r\nexport const NAV_FIXED_LAYOUT = 'NAV_FIXED_LAYOUT';\r\nexport const HEADER_FIXED_LAYOUT = 'HEADER_FIXED_LAYOUT';\r\nexport const BOX_LAYOUT = 'BOX_LAYOUT';\r\nexport const NAV_DROPDOWN_ICON = 'NAV_DROPDOWN_ICON';\r\nexport const NAV_LIST_ICON = 'NAV_LIST_ICON';\r\nexport const NAV_ACTIVE_LIST_COLOR = 'NAV_ACTIVE_LIST_COLOR';\r\nexport const NAV_LIST_TITLE_COLOR = 'NAV_LIST_TITLE_COLOR';\r\nexport const NAV_LIST_TITLE_HIDE = 'NAV_LIST_TITLE_HIDE';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\r\nexport const CONFIG_BLOCK = 'CONFIG_BLOCK';\r\nexport const CHANGE_PRE_LAYOUT = 'CHANGE_PRE_LAYOUT';","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst Landing = React.lazy(() => import('./Demo/Landing/index'));\r\nconst SignUp1 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp1'));\r\nconst SignUp2 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp2'));\r\nconst SignUp3 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp3'));\r\nconst SignUp4 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp4'));\r\nconst SignUp5 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp5'));\r\nconst Signin1 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn1'));\r\nconst Signin2 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn2'));\r\nconst Signin3 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn3'));\r\nconst Signin4 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn4'));\r\nconst Signin5 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn5'));\r\nconst ResetPassword1 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword1'));\r\nconst ResetPassword2 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword2'));\r\nconst ResetPassword3 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword3'));\r\nconst ResetPassword4 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword4'));\r\nconst ResetPassword5 = React.lazy(() => import('./Demo/Authentication/ResetPassword/ResetPassword5'));\r\nconst ChangePassword = React.lazy(() => import('./Demo/Authentication/ChangePassword'));\r\nconst PersonalInfo = React.lazy(() => import('./Demo/Authentication/PersonalInfo'));\r\nconst ProfileSettings = React.lazy(() => import('./Demo/Authentication/ProfileSettings'));\r\nconst MapForm = React.lazy(() => import('./Demo/Authentication/MapForm'));\r\nconst Subscribe = React.lazy(() => import('./Demo/Authentication/Subscribe'));\r\nconst Error = React.lazy(() => import('./Demo/Maintenance/Error'));\r\nconst OfflineUI = React.lazy(() => import('./Demo/Maintenance/OfflineUI'));\r\nconst ComingSoon = React.lazy(() => import('./Demo/Maintenance/ComingSoon'));\r\n\r\nconst route = [\r\n    { path: '/landing', exact: true, name: 'Landing Page', component: Landing },\r\n    { path: '/auth/signup-1', exact: true, name: 'Signup 1', component: SignUp1 },\r\n    { path: '/auth/signup-2', exact: true, name: 'Signup 2', component: SignUp2 },\r\n    { path: '/auth/signup-3', exact: true, name: 'Signup 3', component: SignUp3 },\r\n    { path: '/auth/signup-4', exact: true, name: 'Signup 4', component: SignUp4 },\r\n    { path: '/auth/signup-5', exact: true, name: 'Signup 5', component: SignUp5 },\r\n    { path: '/auth/signin-1', exact: true, name: 'Signin 1', component: Signin1 },\r\n    { path: '/auth/signin-2', exact: true, name: 'Signin 2', component: Signin2 },\r\n    { path: '/auth/signin-3', exact: true, name: 'Signin 3', component: Signin3 },\r\n    { path: '/auth/signin-4', exact: true, name: 'Signin 4', component: Signin4 },\r\n    { path: '/auth/signin-5', exact: true, name: 'Signin 5', component: Signin5 },\r\n    { path: '/auth/reset-password-1', exact: true, name: 'Reset Password 1', component: ResetPassword1 },\r\n    { path: '/auth/reset-password-2', exact: true, name: 'Reset Password 2', component: ResetPassword2 },\r\n    { path: '/auth/reset-password-3', exact: true, name: 'Reset Password 3', component: ResetPassword3 },\r\n    { path: '/auth/reset-password-4', exact: true, name: 'Reset Password 4', component: ResetPassword4 },\r\n    { path: '/auth/reset-password-5', exact: true, name: 'Reset Password 5', component: ResetPassword5 },\r\n    { path: '/auth/change-password', exact: true, name: 'Change Password', component: ChangePassword },\r\n    { path: '/auth/personal-information', exact: true, name: 'Personal Information', component: PersonalInfo },\r\n    { path: '/auth/profile-settings', exact: true, name: 'Profile Settings', component: ProfileSettings },\r\n    { path: '/auth/map-form', exact: true, name: 'Map Form', component: MapForm },\r\n    { path: '/auth/subscribe', exact: true, name: 'Subscribe', component: Subscribe },\r\n    { path: '/maintenance/error', exact: true, name: 'Error', component: Error },\r\n    { path: '/maintenance/coming-soon', exact: true, name: 'Coming Soon', component: ComingSoon },\r\n    { path: '/maintenance/offline-ui', exact: true, name: 'Offline UI', component: OfflineUI },\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        case actionTypes.CHANGE_PRE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                preLayout: action.preLayout\r\n            };\r\n        case actionTypes.LAYOUT_TYPE:\r\n            return {\r\n                ...state,\r\n                layoutType: action.layoutType,\r\n                navBackColor: (action.layoutType === 'dark' && initialState.navBackColor === 'navbar-default') ? 'navbar-dark' : state.navBackColor,\r\n                navBrandColor: (action.layoutType === 'dark' && initialState.navBrandColor === 'brand-default') ? 'brand-dark' : state.navBrandColor,\r\n                navBackImage: initialState.navBackImage,\r\n                headerBackColor: initialState.headerBackColor\r\n            };\r\n        case actionTypes.NAV_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                navBackColor: action.navBackColor,\r\n                navBackImage: initialState.navBackImage,\r\n                navBrandColor: 'brand-default',\r\n                layoutType: (state.layoutType === 'menu-light') ? 'menu-dark' : state.layoutType\r\n            };\r\n        case actionTypes.NAV_BACK_IMAGE:\r\n            return {\r\n                ...state,\r\n                layoutType: 'menu-dark',\r\n                navBackImage: action.navBackImage,\r\n                navBrandColor: '',\r\n                navBackColor: ''\r\n            };\r\n        case actionTypes.NAV_BRAND_COLOR:\r\n            return {\r\n                ...state,\r\n                navBrandColor: action.navBrandColor\r\n            };\r\n        case actionTypes.HEADER_BACK_COLOR:\r\n            return {\r\n                ...state,\r\n                headerBackColor: action.headerBackColor\r\n            };\r\n        case actionTypes.NAV_ICON_COLOR:\r\n            return {\r\n                ...state,\r\n                navIconColor: !state.navIconColor\r\n            };\r\n        case actionTypes.RTL_LAYOUT:\r\n            return {\r\n                ...state,\r\n                rtlLayout: !state.rtlLayout\r\n            };\r\n        case actionTypes.NAV_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                navFixedLayout: !state.navFixedLayout\r\n            };\r\n        case actionTypes.HEADER_FIXED_LAYOUT:\r\n            return {\r\n                ...state,\r\n                headerFixedLayout: !state.headerFixedLayout,\r\n                headerBackColor: (!state.headerFixedLayout && initialState.headerBackColor === 'header-default') ? 'header-blue' : state.headerBackColor,\r\n                navBrandColor: (!state.headerFixedLayout) ? 'brand-default' : initialState.navBrandColor\r\n            };\r\n        case actionTypes.BOX_LAYOUT:\r\n            return {\r\n                ...state,\r\n                boxLayout: !state.boxLayout\r\n            };\r\n        case actionTypes.LAYOUT6_BACKGROUND:\r\n            return {\r\n                ...state,\r\n                layout6Background: action.value.layout6Background,\r\n                layout6BackSize: action.value.layout6BackSize\r\n            };\r\n        case actionTypes.NAV_DROPDOWN_ICON:\r\n            return {\r\n                ...state,\r\n                navDropdownIcon: action.navDropdownIcon,\r\n            };\r\n        case actionTypes.NAV_LIST_ICON:\r\n            return {\r\n                ...state,\r\n                navListIcon: action.navListIcon,\r\n            };\r\n        case actionTypes.NAV_ACTIVE_LIST_COLOR:\r\n            return {\r\n                ...state,\r\n                navActiveListColor: action.navActiveListColor,\r\n            };\r\n        case actionTypes.NAV_LIST_TITLE_COLOR:\r\n            return {\r\n                ...state,\r\n                navListTitleColor: action.navListTitleColor,\r\n            };\r\n        case actionTypes.NAV_LIST_TITLE_HIDE:\r\n            return {\r\n                ...state,\r\n                navListTitleHide: !state.navListTitleHide,\r\n            };\r\n        case actionTypes.CONFIG_BLOCK:\r\n            return {\r\n                ...state,\r\n                configBlock: !state.configBlock,\r\n            };\r\n        case actionTypes.RESET:\r\n            return {\r\n                ...state,\r\n                layout: initialState.layout,\r\n                preLayout: initialState.preLayout,\r\n                collapseMenu: initialState.collapseMenu,\r\n                layoutType: initialState.layoutType,\r\n                navIconColor: initialState.navIconColor,\r\n                headerBackColor: initialState.headerBackColor,\r\n                navBackColor: initialState.navBackColor,\r\n                navBrandColor: initialState.navBrandColor,\r\n                navBackImage: initialState.navBackImage,\r\n                rtlLayout: initialState.rtlLayout,\r\n                navFixedLayout: initialState.navFixedLayout,\r\n                headerFixedLayout: initialState.headerFixedLayout,\r\n                boxLayout: initialState.boxLayout,\r\n                navDropdownIcon: initialState.navDropdownIcon,\r\n                navListIcon: initialState.navListIcon,\r\n                navActiveListColor: initialState.navActiveListColor,\r\n                navListTitleColor: initialState.navListTitleColor,\r\n                navListTitleHide: initialState.navListTitleHide,\r\n                layout6Background : initialState.layout6Background\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {HashRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <HashRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}