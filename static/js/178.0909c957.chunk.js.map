{"version":3,"sources":["Demo/AppPages/Task/TaskList.js"],"names":["window","jQuery","$","global","DataTable","require","tasks","avatar1","avatar2","avatar3","TaskList","React","Component","state","selectedTask","handleClick","e","clickedValue","target","value","checked","this","setState","prevState","parseInt","filter","item","componentDidMount","getOption","selected","label","fn","dataTable","ext","errMode","data","order","columns","render","type","row","html","i","length","responsive","details","display","Responsive","childRowImmediate","atable","Header","Title","as","Body","className","ref","striped","hover","id","placeholder","findIndex","defaultChecked","onClick"],"mappings":"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","file":"static/js/178.0909c957.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Card, Table} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nimport avatar1 from '../../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../../assets/images/user/avatar-3.jpg';\r\n\r\nimport $ from 'jquery';\r\nwindow.jQuery = $;\r\nwindow.$ = $;\r\nglobal.jQuery = $;\r\n\r\n\r\n$.DataTable = require( 'datatables.net-bs' );\r\nrequire( 'datatables.net-responsive-bs' );\r\n\r\nconst tasks = [\r\n    {\r\n        \"id\": \"12\",\r\n        \"task\": \"Add Proper Cursor In Sortable Page\",\r\n        \"date\": \"2017-08-01\",\r\n        \"status\":\"opt5\",\r\n        \"images\": [avatar1, avatar2]\r\n    },\r\n    {\r\n        \"id\": \"56\",\r\n        \"task\": \"Checkbox Design issue\",\r\n        \"date\": \"2017-08-05\",\r\n        \"status\":\"opt3\",\r\n        \"images\": [avatar1]\r\n    },\r\n    {\r\n        \"id\": \"78\",\r\n        \"task\": \"Create UI design model\",\r\n        \"date\": \"2017-08-12\",\r\n        \"status\":\"opt2\",\r\n        \"images\": [avatar2, avatar3]\r\n    },\r\n    {\r\n        \"id\": \"20\",\r\n        \"task\": \"Create UI design model\",\r\n        \"date\": \"2017-08-12\",\r\n        \"status\":\"opt2\",\r\n        \"images\": [avatar1, avatar2, avatar3]\r\n    },\r\n    {\r\n        \"id\": \"35\",\r\n        \"task\": \"Edit the draft for the icons\",\r\n        \"date\": \"2017-08-18\",\r\n        \"status\":\"opt4\",\r\n        \"images\": [avatar1, avatar3]\r\n    }\r\n];\r\n\r\nfunction atable() {\r\n    let tableZero = '#data-table-zero';\r\n    $.fn.dataTable.ext.errMode = 'throw';\r\n\r\n    $(tableZero).DataTable({\r\n        data: tasks,\r\n        order: [[0, \"desc\"]],\r\n        columns: [\r\n            {\r\n                \"data\": \"id\", render: function (data, type, row) {\r\n                    return '#'+data;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"task\", render: function (data, type, row) {\r\n                    return data;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"date\", render: function (data, type, row) {\r\n                    return `<div class=\"form-group form-primary mb-0\">\r\n                            <input type=\"date\" class=\"form-control\" value=\"`+data+`\" />\r\n                            <span class=\"form-bar\"/>\r\n                        </div>`;\r\n\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"status\", render: function (data, type, row) {\r\n                    return `<div class=\"form-group form-primary mb-0\">\r\n                              <select name=\"select\" class=\"form-control form-control-sm\">\r\n                                `+getOption('opt1', data, 'Open')+`\r\n                                `+getOption('opt2', data, 'Resolved')+`\r\n                                `+getOption('opt3', data, 'Invalid')+`\r\n                                `+getOption('opt4', data, 'On hold')+`\r\n                                `+getOption('opt5', data, 'Close')+`\r\n                              </select>\r\n                              <span class=\"form-bar\"/>\r\n                            </div>`;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"images\", render: function (data, type, row) {\r\n                    let html = ``;\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        html += `<a href=\"javascript:;\">\r\n                                    <img class=\"img-fluid img-radius m-r-5\" src=\"`+data[i]+`\" alt=\"Task List\">\r\n                                </a>`;\r\n                    }\r\n\r\n                    html += `<a href=\"javascript:;\"><i class=\"fa fa-plus f-w-600 m-l-5\"/></a>`;\r\n\r\n                    return html;\r\n                }\r\n            },\r\n            {\r\n                \"data\": \"id\", render: function (data, type, row) {\r\n                    return `<a href=\"javascript:\" class=\"btn btn-icon btn-rounded btn-outline-primary\"><span class=\"fa fa-book\"/></a>\r\n                            <a href=\"javascript:\" class=\"btn btn-icon btn-rounded btn-outline-warning\"><span class=\"fa fa-edit\"/></a>\r\n                            <a href=\"javascript:\" class=\"btn btn-icon btn-rounded btn-outline-danger\"><span class=\"fa fa-trash\"/></a>`;\r\n                }\r\n            }\r\n        ],\r\n        responsive: {\r\n            responsive: {\r\n                details: {\r\n                    display: $.fn.dataTable.Responsive.display.childRowImmediate,\r\n                        type: ''\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    function getOption(value, selected, label) {\r\n        if (value === selected) {\r\n            return `<option value=\"`+value+`\" selected>`+label+`</option>`;\r\n        } else {\r\n            return `<option value=\"`+value+`\">`+label+`</option>`;\r\n        }\r\n    }\r\n}\r\n\r\nclass TaskList extends React.Component {\r\n    state = {\r\n        selectedTask: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        atable();\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const clickedValue = e.target.value;\r\n        if (e.target.checked) {\r\n            this.setState(prevState => {\r\n                return {\r\n                    selectedTask: [...prevState.selectedTask, parseInt(clickedValue)]\r\n                };\r\n            })\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    selectedTask: (this.state.selectedTask).filter(item => item !== parseInt(clickedValue))\r\n                };\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const {selectedTask} = this.state;\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Task List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body className='task-data'>\r\n                                <Table ref=\"tbl\" striped hover responsive id=\"data-table-zero\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Task List</th>\r\n                                        <th>Last Commit</th>\r\n                                        <th>Status</th>\r\n                                        <th>Assigned User</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tfoot>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Task List</th>\r\n                                        <th>Last Commit</th>\r\n                                        <th>Status</th>\r\n                                        <th>Assigned User</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                    </tfoot>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>To Do List</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"text\" className=\"form-control add_task_todo\" placeholder=\"Create your task list\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-primary btn-icon btn-msg-send\" type=\"button\"><i className=\"fa fa-plus\"/></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"new-task\">\r\n                                    <div className=\"to-do-list mb-4\">\r\n                                        <div className=\"checkbox-fade fade-in-primary\">\r\n                                            <label className={(selectedTask.findIndex(item => item === 1) > -1) ? 'check-task done-task' : 'check-task'}>\r\n                                                <input type=\"checkbox\" value={1} defaultChecked={(selectedTask.findIndex(item => item === 1) > -1)} onClick={(e) => this.handleClick(e)} />\r\n                                                <span className=\"cr mr-3\">\r\n                                                    <i className=\"cr-icon fa fa-check txt-primary\"/>\r\n                                                </span>\r\n                                                <span>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"to-do-list mb-4\">\r\n                                        <div className=\"checkbox-fade fade-in-primary\">\r\n                                            <label className={(selectedTask.findIndex(item => item === 2) > -1) ? 'check-task done-task' : 'check-task'}>\r\n                                                <input type=\"checkbox\" value={2} defaultChecked={(selectedTask.findIndex(item => item === 2) > -1)} onClick={(e) => this.handleClick(e)} />\r\n                                                <span className=\"cr mr-3\">\r\n                                                    <i className=\"cr-icon fa fa-check txt-primary\"/>\r\n                                                </span>\r\n                                                <span>scrambled it to make a type specimen book. It has survived not only five centuries</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"to-do-list mb-4\">\r\n                                        <div className=\"checkbox-fade fade-in-primary\">\r\n                                            <label className={(selectedTask.findIndex(item => item === 3) > -1) ? 'check-task done-task' : 'check-task'}>\r\n                                                <input type=\"checkbox\" value={3} defaultChecked={(selectedTask.findIndex(item => item === 3) > -1)} onClick={(e) => this.handleClick(e)} />\r\n                                                <span className=\"cr mr-3\">\r\n                                                    <i className=\"cr-icon fa fa-check txt-primary\"/>\r\n                                                </span>\r\n                                                <span>It is a long established fact that a reader will be distracted by the readable content of a page</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"to-do-list mb-4\">\r\n                                        <div className=\"checkbox-fade fade-in-primary\">\r\n                                            <label className={(selectedTask.findIndex(item => item === 4) > -1) ? 'check-task done-task' : 'check-task'}>\r\n                                                <input type=\"checkbox\" value={4} defaultChecked={(selectedTask.findIndex(item => item === 4) > -1)} onClick={(e) => this.handleClick(e)} />\r\n                                                <span className=\"cr mr-3\">\r\n                                                    <i className=\"cr-icon fa fa-check txt-primary\"/>\r\n                                                </span>\r\n                                                <span>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"to-do-list mb-4\">\r\n                                        <div className=\"checkbox-fade fade-in-primary\">\r\n                                            <label className={(selectedTask.findIndex(item => item === 5) > -1) ? 'check-task done-task' : 'check-task'}>\r\n                                                <input type=\"checkbox\" value={5} defaultChecked={(selectedTask.findIndex(item => item === 5) > -1)} onClick={(e) => this.handleClick(e)} />\r\n                                                <span className=\"cr mr-3\">\r\n                                                    <i className=\"cr-icon fa fa-check txt-primary\"/>\r\n                                                </span>\r\n                                                <span>The standard chunk of Lorem Ipsum used since the 1500s is reproduced</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;"],"sourceRoot":""}