{"version":3,"sources":["Demo/Charts/GoogleChart/AreaBasicChart.js","Demo/Charts/GoogleChart/AreaStackingChart.js","Demo/Charts/GoogleChart/BarBasicChart.js","Demo/Charts/GoogleChart/BubbleChart.js","Demo/Charts/GoogleChart/CandlestickChart.js","Demo/Charts/GoogleChart/WaterfallChart.js","Demo/Charts/GoogleChart/ComboChart.js","Demo/Charts/GoogleChart/PieDonutChart.js","Demo/Charts/GoogleChart/PieExploadingChart.js","Demo/Charts/GoogleChart/PieSliceVisibilityChart.js","Demo/Charts/GoogleChart/index.js"],"names":["AreaBasicChart","React","Component","render","width","height","chartType","loader","data","options","title","hAxis","titleTextStyle","color","vAxis","minValue","colors","rootProps","isStacked","legend","position","maxLines","BarBasicChart","chartArea","BubbleChart","bubble","textStyle","fontSize","CandlestickChart","WaterfallChart","bar","groupWidth","candlestick","fallingColor","strokeWidth","fill","risingColor","ComboChart","seriesType","series","5","type","DonutChart","pieHole","PieExploadingChart","pieSliceText","slices","4","offset","12","14","15","PieSliceVisibilityChart","sliceVisibilityThreshold","GoogleChart","Row","Col","xl","md","Card","Header","Title","as","Body","AreaStackingChart","PieDonutChart"],"mappings":"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","file":"static/js/181.b1298ada.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass AreaBasicChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"AreaChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Year', 'Sales', 'Expenses'],\r\n                    ['2013', 1000, 400],\r\n                    ['2014', 1170, 460],\r\n                    ['2015', 660, 1120],\r\n                    ['2016', 1030, 540],\r\n                ]}\r\n                options={{\r\n                    title: 'Company Performance',\r\n                    hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\r\n                    vAxis: { minValue: 0 },\r\n                    colors: ['#1de9b6', '#1dc4e9']\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AreaBasicChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass AreaBasicChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"AreaChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Year', 'Sales', 'Expenses'],\r\n                    ['2013', 1000, 400],\r\n                    ['2014', 1170, 460],\r\n                    ['2015', 660, 1120],\r\n                    ['2016', 1030, 540],\r\n                ]}\r\n                options={{\r\n                    isStacked: true,\r\n                    legend: { position: 'top', maxLines: 3 },\r\n                    vAxis: { minValue: 0 },\r\n                    colors: ['#1de9b6', '#A389D4']\r\n                }}\r\n                rootProps={{ 'data-testid': '2' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AreaBasicChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass BarBasicChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"BarChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['City', '2010 Population', '2000 Population'],\r\n                    ['New York City, NY', 8175000, 8008000],\r\n                    ['Los Angeles, CA', 3792000, 3694000],\r\n                    ['Chicago, IL', 2695000, 2896000],\r\n                    ['Houston, TX', 2099000, 1953000],\r\n                    ['Philadelphia, PA', 1526000, 1517000],\r\n                ]}\r\n                options={{\r\n                    title: 'Population of Largest U.S. Cities',\r\n                    chartArea: { width: '50%' },\r\n                    isStacked: true,\r\n                    hAxis: {\r\n                        title: 'Total Population',\r\n                        minValue: 0,\r\n                    },\r\n                    vAxis: {\r\n                        title: 'City',\r\n                    },\r\n                    colors: ['#A389D4', '#04a9f5']\r\n                }}\r\n                rootProps={{ 'data-testid': '3' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarBasicChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass BubbleChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"BubbleChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\r\n                    ['CAN', 80.66, 1.67, 'North America', 33739900],\r\n                    ['DEU', 79.84, 1.36, 'Europe', 81902307],\r\n                    ['DNK', 78.6, 1.84, 'Europe', 5523095],\r\n                    ['EGY', 72.73, 2.78, 'Middle East', 79716203],\r\n                    ['GBR', 80.05, 2, 'Europe', 61801570],\r\n                    ['IRN', 72.49, 1.7, 'Middle East', 73137148],\r\n                    ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\r\n                    ['ISR', 81.55, 2.96, 'Middle East', 7485600],\r\n                    ['RUS', 68.6, 1.54, 'Europe', 141850000],\r\n                    ['USA', 78.09, 2.05, 'North America', 307007000],\r\n                ]}\r\n                options={{\r\n                    title:\r\n                    'Correlation between life expectancy, fertility rate ' +\r\n                    'and population of some world countries (2010)',\r\n                    hAxis: { title: 'Life Expectancy' },\r\n                    vAxis: { title: 'Fertility Rate' },\r\n                    bubble: { textStyle: { fontSize: 11 } },\r\n                    colors: ['#1de9b6', '#04a9f5', '#A389D4']\r\n                }}\r\n                rootProps={{ 'data-testid': '4' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default BubbleChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass CandlestickChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"CandlestickChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['day', 'a', 'b', 'c', 'd'],\r\n                    ['Mon', 20, 28, 38, 45],\r\n                    ['Tue', 31, 38, 55, 66],\r\n                    ['Wed', 50, 55, 77, 80],\r\n                    ['Thu', 77, 77, 66, 50],\r\n                    ['Fri', 68, 66, 22, 15],\r\n                ]}\r\n                options={{\r\n                    legend: 'none',\r\n                    colors: ['#04a9f5']\r\n                }}\r\n                rootProps={{ 'data-testid': '5' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CandlestickChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass WaterfallChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"CandlestickChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['day', 'a', 'b', 'c', 'd'],\r\n                    ['Mon', 20, 28, 38, 45],\r\n                    ['Tue', 31, 38, 55, 66],\r\n                    ['Wed', 50, 55, 77, 80],\r\n                    ['Thu', 77, 77, 66, 50],\r\n                    ['Fri', 68, 66, 22, 15],\r\n                ]}\r\n                options={{\r\n                    legend: 'none',\r\n                    bar: { groupWidth: '100%' },\r\n                    candlestick: {\r\n                        fallingColor: {\r\n                            strokeWidth: 0,\r\n                            fill: '#04a9f5'\r\n                        },\r\n                        risingColor: {\r\n                            strokeWidth: 0,\r\n                            fill: '#1de9b6'\r\n                        }\r\n                    },\r\n                }}\r\n                rootProps={{ 'data-testid': '6' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaterfallChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass ComboChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"ComboChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    [\r\n                        'Month',\r\n                        'Bolivia',\r\n                        'Ecuador',\r\n                        'Madagascar',\r\n                        'Papua New Guinea',\r\n                        'Rwanda',\r\n                        'Average',\r\n                    ],\r\n                    ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n                    ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n                    ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n                    ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n                    ['2008/09', 136, 691, 629, 1026, 366, 569.6],\r\n                ]}\r\n                options={{\r\n                    title: 'Monthly Coffee Production by Country',\r\n                    vAxis: { title: 'Cups' },\r\n                    hAxis: { title: 'Month' },\r\n                    seriesType: 'bars',\r\n                    series: { 5: { type: 'line' } },\r\n                    colors: ['#04a9f5', '#1de9b6', '#f44236', '#1dc4e9', '#A389D4', '#3ebfea']\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComboChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass DonutChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Task', 'Hours per Day'],\r\n                    ['Work', 11],\r\n                    ['Eat', 2],\r\n                    ['Commute', 2],\r\n                    ['Watch TV', 2],\r\n                    ['Sleep', 7],\r\n                ]}\r\n                options={{\r\n                    title: 'My Daily Activities',\r\n                    pieHole: 0.4,\r\n                    colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\r\n                }}\r\n                rootProps={{ 'data-testid': '3' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default DonutChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass PieExploadingChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Language', 'Speakers (in millions)'],\r\n                    ['Assamese', 13],\r\n                    ['Bengali', 83],\r\n                    ['Bodo', 1.4],\r\n                    ['Dogri', 2.3],\r\n                    ['Gujarati', 46],\r\n                    ['Hindi', 300],\r\n                    ['Kannada', 38],\r\n                    ['Kashmiri', 5.5],\r\n                    ['Konkani', 5],\r\n                    ['Maithili', 20],\r\n                    ['Malayalam', 33],\r\n                    ['Manipuri', 1.5],\r\n                    ['Marathi', 72],\r\n                    ['Nepali', 2.9],\r\n                    ['Oriya', 33],\r\n                    ['Punjabi', 29],\r\n                    ['Sanskrit', 0.01],\r\n                    ['Santhali', 6.5],\r\n                    ['Sindhi', 2.5],\r\n                    ['Tamil', 61],\r\n                    ['Telugu', 74],\r\n                    ['Urdu', 52],\r\n                ]}\r\n                options={{\r\n                    title: 'Indian Language Use',\r\n                    legend: 'none',\r\n                    pieSliceText: 'label',\r\n                    slices: {\r\n                        4: { offset: 0.2 },\r\n                        12: { offset: 0.3 },\r\n                        14: { offset: 0.4 },\r\n                        15: { offset: 0.5 },\r\n                    },\r\n                    colors: ['#04a9f5', '#1de9b6', '#1dc4e9', '#FE8A7D', '#A389D4', '#3ebfea']\r\n                }}\r\n                rootProps={{ 'data-testid': '5' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PieExploadingChart;","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nclass PieSliceVisibilityChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Chart\r\n                width='100%'\r\n                height='300px'\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Pizza', 'Popularity'],\r\n                    ['Pepperoni', 33],\r\n                    ['Hawaiian', 26],\r\n                    ['Mushroom', 22],\r\n                    ['Sausage', 10],\r\n                    ['Anchovies', 9],\r\n                ]}\r\n                options={{\r\n                    title: 'Popularity of Types of Pizza',\r\n                    sliceVisibilityThreshold: 0.2,\r\n                    colors: ['#04a9f5', '#1de9b6', '#A389D4', '#899FD4']\r\n                }}\r\n                rootProps={{ 'data-testid': '7' }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default PieSliceVisibilityChart;","import React from 'react';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux/index\";\r\nimport AreaBasicChart from \"./AreaBasicChart\";\r\nimport AreaStackingChart from \"./AreaStackingChart\";\r\nimport BarBasicChart from \"./BarBasicChart\";\r\nimport BubbleChart from \"./BubbleChart\";\r\nimport CandlestickChart from \"./CandlestickChart\";\r\nimport WaterfallChart from \"./WaterfallChart\";\r\nimport ComboChart from \"./ComboChart\";\r\nimport PieDonutChart from \"./PieDonutChart\";\r\nimport PieExploadingChart from \"./PieExploadingChart\";\r\nimport PieSliceVisibilityChart from \"./PieSliceVisibilityChart\";\r\n\r\nclass GoogleChart extends React.Component {\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Area Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <AreaBasicChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Stacking Area Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <AreaStackingChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Bar Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <BarBasicChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Bubble Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <BubbleChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Candlestick Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <CandlestickChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Waterfall Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <WaterfallChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Combo Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <ComboChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Donut Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <PieDonutChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Exploading A Slice Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <PieExploadingChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xl={4} md={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Slice Visibility Threshold Chart</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <PieSliceVisibilityChart/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleChart;"],"sourceRoot":""}