{"version":3,"sources":["App/components/MainCard.js","Demo/UIElements/Advance/Tour.js"],"names":["MainCard","Component","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","className","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","success","erroneous","notdeployed","join","style","in","Body","children","windowSize","steps","selector","content","stepsRide","placement","locale","skip","aria-label","target","AdvanceTour","React","isTourOpen","run","handleJoyrideCallback","data","status","STATUS","FINISHED","SKIPPED","includes","isOpen","onRequestClose","callback","continuous","scrollToFirstStep","showProgress","showSkipButton","styles","options","zIndex","Text"],"mappings":"4HAAA,gFAOA,MAAMA,UAAiBC,YAAW,eAAD,oBAC7BC,MAAQ,CACJC,SAAUC,KAAKC,MAAMF,SACrBG,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,YAAY,GANa,KAS7BC,kBAAoB,KAChBN,KAAKO,SAAS,CAACH,UAAU,IACzBI,YAAY,KACRR,KAAKO,SAAS,CAACH,UAAU,KAC1B,MAbsB,KAgB7BK,kBAAoB,KAChBT,KAAKO,SAAS,CAACF,YAAY,KAG/BK,SACI,IAAIC,EAAiBC,EAAQC,EAAiBC,EAC1CC,EACAC,EAAY,GAwFhB,OAtFIhB,KAAKF,MAAMC,WACXc,EACI,yBAAKI,UAAU,qBACX,kBAAC,IAAD,CAAUC,YAAY,EAAMD,UAAU,yBAClC,kBAAC,IAASE,OAAV,CAAiBC,GAAG,iBAAiBH,UAAU,YAC3C,uBAAGA,UAAU,gCAEjB,kBAAC,IAASI,KAAV,CAAeC,GAAG,KAAKL,UAAU,6BAC7B,kBAAC,IAASM,KAAV,CAAeD,GAAG,KAAKL,UAAU,gBAAgBO,QAAS,KAAOxB,KAAKO,SAASkB,IAAqB,CAACvB,UAAWuB,EAAUvB,cACtH,uBAAGe,UAAWjB,KAAKF,MAAMI,SAAW,wBAA0B,0BAC9D,uBAAGwB,KAAMC,IAAKC,YAAd,IAA4B5B,KAAKF,MAAMI,SAAW,UAAY,WAA9D,MAEJ,kBAAC,IAASqB,KAAV,CAAeD,GAAG,KAAKL,UAAU,gBAAgBO,QAAS,KAAOxB,KAAKO,SAASkB,IAAqB,CAACtB,cAAesB,EAAUtB,kBAC1H,uBAAGc,UAAWjB,KAAKF,MAAMK,aAAe,oBAAsB,uBAC9D,uBAAGuB,KAAMC,IAAKC,YAAd,IAA4B5B,KAAKF,MAAMK,aAAe,SAAW,WAAjE,MAEJ,kBAAC,IAASoB,KAAV,CAAeD,GAAG,KAAKL,UAAU,gBAAgBO,QAASxB,KAAKM,mBAC3D,uBAAGW,UAAU,4BACb,uBAAGS,KAAMC,IAAKC,YAAd,mBAEJ,kBAAC,IAASL,KAAV,CAAeD,GAAG,KAAKL,UAAU,gBAAgBO,QAASxB,KAAKS,mBAC3D,uBAAGQ,UAAU,uBACb,uBAAGS,KAAMC,IAAKC,YAAd,iBAQxBd,EACI,kBAAC,IAAKe,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYR,GAAG,MAAMtB,KAAKC,MAAM8B,OAC/BlB,GAILb,KAAKF,MAAMI,WACXc,EAAY,IAAIA,EAAW,aAC3BL,EAAkB,CAACqB,SAAU,QAASC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAOpC,KAAKC,MAAMoC,YAAaC,OAAQtC,KAAKC,MAAMsC,eAGnHvC,KAAKF,MAAMM,WACXY,EAAY,IAAIA,EAAW,aAC3BJ,EACI,yBAAKK,UAAU,eACX,uBAAGA,UAAU,8BAKrBjB,KAAKF,MAAMO,aACXW,EAAY,IAAIA,EAAW,WAG3BhB,KAAKC,MAAMe,YACXA,EAAY,IAAIA,EAAWhB,KAAKC,MAAMe,YAGtChB,KAAKC,MAAMuC,UACXxB,EAAY,IAAIA,EAAW,oBAG3BhB,KAAKC,MAAMwC,YACXzB,EAAY,IAAIA,EAAW,kBAG3BhB,KAAKC,MAAMyC,cACX1B,EAAY,IAAIA,EAAW,wBAI/BD,EACI,kBAAC,IAAD,CAAME,UAAWD,EAAU2B,KAAK,KAAMC,MAAOjC,GACxCG,EACD,kBAAC,IAAD,CAAU+B,IAAK7C,KAAKF,MAAMK,cACtB,6BACI,kBAAC,IAAK2C,KAAN,KACK9C,KAAKC,MAAM8C,YAIvBnC,GAKL,kBAAC,IAAD,KACKG,IAMFiC,QAAWpD,I,kCC9H1B,iGAQMqD,EAAQ,CACV,CACIC,SAAU,UACVC,QAAS,0CAEb,CACID,SAAU,eACVC,QAAS,gCAEb,CACID,SAAU,kBACVC,QAAS,qCAEb,CACID,SAAU,eACVC,QAAS,qCAEb,CACID,SAAU,uBACVC,QAAS,iBAIXC,EAAY,CACd,CACID,QAAS,wDACTE,UAAW,SACXC,OAAQ,CAAEC,KAAM,4BAAQC,aAAW,QAAnB,YAChBC,OAAQ,QAEZ,CACIA,OAAQ,UACRN,QAAS,yCACTE,UAAW,OAEf,CACII,OAAQ,eACRN,QAAS,gCAEb,CACIM,OAAQ,kBACRN,QAAS,qCAEb,CACIM,OAAQ,eACRN,QAAS,qCAEb,CACIM,OAAQ,uBACRN,QAAS,iBAIjB,MAAMO,UAAoBC,IAAM9D,UAAW,eAAD,oBACtCC,MAAQ,CACJ8D,YAAY,EACZC,KAAK,EACLZ,MAAOG,GAJ2B,KAOtCU,sBAAwBC,IAAS,IACrBC,EAAWD,EAAXC,OAEJ,CAACC,IAAOC,SAAUD,IAAOE,SAASC,SAASJ,IAC3ChE,KAAKO,SAAS,CAAEsD,KAAK,KAQ7BnD,SACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAKmB,OAAN,KACI,kBAAC,IAAKC,MAAN,CAAYR,GAAG,MAAf,SAEJ,kBAAC,IAAKwB,KAAN,KACI,kBAAC,IAAD,CAAQtB,QAAS,IAAMxB,KAAKO,SAAS,CAACqD,YAAY,KAAlD,oBACA,kBAAC,IAAD,CAAQpC,QAAS,IAAMxB,KAAKO,SAAS,CAACsD,KAAK,KAA3C,YACA,kBAAC,IAAD,CACIZ,MAAOA,EACPoB,OAAQrE,KAAKF,MAAM8D,WACnBU,eAAgB,IAAMtE,KAAKO,SAAS,CAACqD,YAAY,MACrD,kBAAC,IAAD,CACIW,SAAUvE,KAAK8D,sBACfD,IAAK7D,KAAKF,MAAM+D,IAChBW,YAAU,EACVC,mBAAiB,EACjBC,cAAY,EACZC,gBAAc,EACd1B,MAAOjD,KAAKF,MAAMmD,MAClB2B,OAAQ,CACJC,QAAS,CACLC,OAAQ,UAM5B,kBAAC,IAAD,CAAU/E,UAAQ,EAACgC,MAAM,aAAaf,UAAU,oBAC5C,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,kBAAC,IAAK+D,KAAN,6BACA,kBAAC,IAAKA,KAAN,kCASbrB","file":"static/js/156.86414fb3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-vertical\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Refresh data </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        if (this.props.success) {\r\n            cardClass = [...cardClass, 'monitor_success'];\r\n        }\r\n\r\n        if (this.props.erroneous) {\r\n            cardClass = [...cardClass, 'monitor_error'];\r\n        }\r\n\r\n        if (this.props.notdeployed) {\r\n            cardClass = [...cardClass, 'monitor_notdeployed'];\r\n        }\r\n\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\nimport {Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Tour from 'reactour';\r\nimport Joyride, { STATUS } from 'react-joyride';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport MainCard from \"../../../App/components/MainCard\";\r\n\r\nconst steps = [\r\n    {\r\n        selector: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n    },\r\n    {\r\n        selector: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        selector: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        selector: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        selector: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nconst stepsRide = [\r\n    {\r\n        content: <h5>Let's begin our journey!</h5>,\r\n        placement: 'center',\r\n        locale: { skip: <strong aria-label=\"skip\">S-K-I-P</strong> },\r\n        target: 'body',\r\n    },\r\n    {\r\n        target: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n        placement: 'top'\r\n    },\r\n    {\r\n        target: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        target: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        target: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        target: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nclass AdvanceTour extends React.Component {\r\n    state = {\r\n        isTourOpen: false,\r\n        run: false,\r\n        steps: stepsRide\r\n    };\r\n\r\n    handleJoyrideCallback = data => {\r\n        const { status } = data;\r\n\r\n        if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\r\n            this.setState({ run: false });\r\n        }\r\n\r\n        /*console.groupCollapsed(type);\r\n        console.log(data);\r\n        console.groupEnd();*/\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Tour</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button onClick={() => this.setState({isTourOpen: true})}>Start Basic Tour</Button>\r\n                                <Button onClick={() => this.setState({run: true})}>Joy Ride</Button>\r\n                                <Tour\r\n                                    steps={steps}\r\n                                    isOpen={this.state.isTourOpen}\r\n                                    onRequestClose={() => this.setState({isTourOpen: false})} />\r\n                                <Joyride\r\n                                    callback={this.handleJoyrideCallback}\r\n                                    run={this.state.run}\r\n                                    continuous\r\n                                    scrollToFirstStep\r\n                                    showProgress\r\n                                    showSkipButton\r\n                                    steps={this.state.steps}\r\n                                    styles={{\r\n                                        options: {\r\n                                            zIndex: 10000,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <MainCard isOption title=\"Hello tour\" cardClass=\"tour-1 card-test\">\r\n                            <h1>H1 Datta Able</h1>\r\n                            <h2>H2 Datta Able</h2>\r\n                            <h3>H3 Datta Able</h3>\r\n                            <h4>H4 Datta Able</h4>\r\n                            <h5>H5 Datta Able</h5>\r\n                            <h6>H6 Datta Able</h6>\r\n                            <Card.Text>Paragraph Datta Able</Card.Text>\r\n                            <Card.Text>Paragraph Datta Able</Card.Text>\r\n                        </MainCard>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvanceTour;"],"sourceRoot":""}