{"version":3,"file":"static/js/4597.af546d77.chunk.js","mappings":"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","sources":["App/components/Prism.js","Demo/AppPages/ToDo/Notes/Note.js","Demo/AppPages/ToDo/Notes/Board.js","Demo/AppPages/ToDo/Notes.js"],"sourcesContent":["import React from 'react';\r\nimport Highlight, {defaultProps} from \"prism-react-renderer\";\r\n\r\nconst prism = (props) => {\r\n    const theme = require('prism-react-renderer/themes/dracula'); // dracula, duotoneDark, duotoneLight, nightOwl, oceanicNext, shadesOfPurple, vsDark, vsDarkPlus\r\n    return (\r\n        <Highlight {...defaultProps} theme={theme} code={props.code} language={props.language}>\r\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n                <div className=\"m-t-15\">\r\n                    <pre className={className} style={style}>\r\n                        <code className=\"language-markup\">\r\n                            {tokens.map((line, i) => (\r\n                                <div {...getLineProps({ line, key: i })}>\r\n                                    {line.map((token, key) => (\r\n                                        <span {...getTokenProps({ token, key })} />\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </code>\r\n                    </pre>\r\n                </div>\r\n            )}\r\n        </Highlight>\r\n    );\r\n};\r\n\r\nexport default prism;","import React, { Component } from \"react\";\r\n\r\nconst saveText = \"SAVE\";\r\nconst removeToolTipText = \"Remove Note\";\r\n\r\nexport default class Note extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    updatePosition({position}) {\r\n        this.style = {\r\n            left: (position ? position.xPos : this.randomBetween(0, window.innerWidth - 280) + \"px\"),\r\n            top: (position ? position.yPos : this.randomBetween(0, window.innerHeight - 280) + \"px\")\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.updatePosition(this.props);\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        this.updatePosition(nextProps);\r\n    }\r\n\r\n    onDragStart(e) {\r\n        const { index } = this.props;\r\n        e.dataTransfer.setData(\"application/x-note\", index);\r\n    }\r\n\r\n    // Get random position\r\n    randomBetween(min, max) {\r\n        return (min + Math.ceil(Math.random() * max));\r\n    }\r\n\r\n    // Turn on edit moge\r\n    edit() {\r\n        this.setState({editing: true});\r\n    }\r\n\r\n    // Save edits\r\n    save() {\r\n        const { index } = this.props;\r\n        this.props.onChange(this.newText.value, index);\r\n        this.setState({editing: false});\r\n    }\r\n\r\n    // Remove note\r\n    remove() {\r\n        const { index } = this.props;\r\n        this.props.onRemove(index);\r\n    }\r\n\r\n    // Render note body\r\n    renderNoteBody(content, save) {\r\n        return (\r\n            <div draggable=\"true\" onDragStart={(e) => this.onDragStart(e)} onDoubleClick={() => this.edit()} className=\"note\" style={this.style}>\r\n                <article>\r\n                    <header className=\"note__header\">\r\n                        <div className=\"wrapper-tooltip\">\r\n                            <span onClick={() => this.remove()} className=\"close hairline\"></span>\r\n                            <div className=\"tooltip\">{removeToolTipText}</div>\r\n                        </div>\r\n                    </header>\r\n                    <div className=\"note__content\">{content}</div>\r\n                    <footer className=\"note__footer\">\r\n                        <div className=\"note__fold\"></div>\r\n                        {save ? <div className=\"note__save\" onClick={() => this.save()}>{saveText}</div> : \"\"}\r\n                    </footer>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Render note preview\r\n    renderDisplay() {\r\n        const { children } = this.props;\r\n        return this.renderNoteBody(children);\r\n    }\r\n\r\n    // Render note edit mode\r\n    renderForm() {\r\n        const { children } = this.props;\r\n        const content = (\r\n            <div>\r\n                <textarea ref={ref => this.newText = ref} defaultValue={children} className=\"note__textarea\"/>\r\n            </div>\r\n        );\r\n\r\n        return this.renderNoteBody(content, true);\r\n    }\r\n\r\n    render() {\r\n        const { editing } = this.state;\r\n        return (editing ? this.renderForm() : this.renderDisplay());\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst newNoteText = \"New note :-)\";\r\nconst newNoteButtonText = \"ADD NEW NOTE\";\r\n\r\nconst initialNotes = [\r\n    {\r\n        note: \"Industry's standard dummy text ever since the 1500s\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"The point of using Lorem Ipsum is that it has a more-or-less\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"A collection of textile samples lay spread out on the table One morning, when Gregor Samsa woke from troubled.\",\r\n        position: false\r\n    },\r\n    {\r\n        note: \"There are many variations of passages of Lorem Ipsum\",\r\n        position: false\r\n    }\r\n];\r\n\r\nexport default class Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notes: []\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Get notes from local storage\r\n\r\n        const notes = JSON.parse(localStorage.getItem(\"notesStorage\")) || [];\r\n        if (notes.length > 0) {\r\n            notes.map(single => {\r\n                this.add(single.note, single.position);\r\n                return false;\r\n            });\r\n        } else {\r\n            initialNotes.map(single => {\r\n                this.add(single.note, single.position);\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    // Save to localStorage\r\n    saveToStorage(notes) {\r\n        this.setState({notes});\r\n        localStorage.setItem(\"notesStorage\", JSON.stringify(notes));\r\n    }\r\n\r\n    // Get next ID\r\n    nextId() {\r\n        this.uniqueId = this.uniqueId || 0;\r\n        return this.uniqueId++;\r\n    }\r\n\r\n    // Add note to localStorage and state\r\n    add(text, position) {\r\n        const { notes } = this.state;\r\n        notes.push({\r\n            id: this.nextId(this),\r\n            note: text,\r\n            position\r\n        });\r\n\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note text\r\n    update(newText, i) {\r\n        const { notes } = this.state;\r\n        notes[i].note = newText;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Update note position\r\n    updatePosition(position, i) {\r\n        const { notes } = this.state;\r\n        notes[i].position = position;\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Remove note\r\n    remove(i) {\r\n        const { notes } = this.state;\r\n        notes.splice(i, 1);\r\n        this.saveToStorage(notes);\r\n    }\r\n\r\n    // Render Notes\r\n    renderNotes(note, i) {\r\n        return (\r\n            <Note key={note.id}\r\n                  index={i}\r\n                  position={note.position}\r\n                  onChange={this.update.bind(this)}\r\n                  onDrag={this.updatePosition.bind(this)}\r\n                  onRemove={this.remove.bind(this)} >\r\n                {note.note}\r\n            </Note>\r\n        );\r\n    }\r\n\r\n    onDragOver(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDrop(e) {\r\n        let noteId = e.dataTransfer.getData(\"application/x-note\");\r\n        let position = {xPos: e.clientX, yPos: e.clientY};\r\n        this.updatePosition(position, noteId);\r\n    }\r\n\r\n    render() {\r\n        const { notes } = this.state;\r\n        return (\r\n            <div className=\"board\" onDragOver={(e) => this.onDragOver(e)} onDrop={(e) => this.onDrop(e)}>\r\n                <header className=\"main-header\">\r\n                    <div className=\"main-header__text fadein\" onClick={this.add.bind(this, newNoteText, false)}>\r\n                        {newNoteButtonText}\r\n                    </div>\r\n                </header>\r\n                {notes.map(this.renderNotes.bind(this))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Row, Col, Card, Form} from 'react-bootstrap';\r\nimport Stickies from 'react-stickies';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Prism from \"../../../App/components/Prism\";\r\nimport Board from \"../ToDo/Notes/Board\";\r\n\r\nconst mock = [\r\n    {\r\n        \"id\": \"3effea2c-fc90-98e0-51d0-22c32efb2177\",\r\n        \"text\": \"Hey I am Ajain... \",\r\n        \"title\": \"Hello\",\r\n        \"grid\": {\r\n            \"i\": \"3effea2c-fc90-98e0-51d0-22c32efb2177\",\r\n            \"x\": 0,\r\n            \"y\": null,\r\n            \"w\": 2,\r\n            \"h\" : 2,\r\n            \"isDraggable\": false\r\n        },\r\n        \"contentEditable\": true,\r\n        \"timeStamp\": \"13 Feb 2017 2:53 PM\"\r\n    },\r\n    {\r\n        \"id\": \"3effea2c-fc90-98e0-51d0-22c32efb2178\",\r\n        \"text\": \"If you liked stickies... contribute by liking it... \",\r\n        \"title\": \"Contribute\",\r\n        \"grid\": {\r\n            \"i\": \"3effea2c-fc90-98e0-51d0-22c32efb2178\",\r\n            \"x\": 4,\r\n            \"y\": 0,\r\n            \"w\": 4,\r\n            \"h\" : 4,\r\n            \"isDraggable\": false\r\n        },\r\n        \"contentEditable\": true,\r\n        \"timeStamp\": \"13 Feb 2017 2:53 PM\"\r\n    }\r\n];\r\n\r\nclass Notes extends React.Component {\r\n    static defaultProps = {\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            notes: [],\r\n            showTape: false,\r\n            showOutput: true,\r\n            showTitle: true,\r\n            showFooter: true,\r\n            output: '',\r\n            colors: ['#FFFFFF'],\r\n            showCustomColors: false,\r\n            showMock: false\r\n        };\r\n        this.toggleValue = this.toggleValue.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.fetchMock = this.fetchMock.bind(this);\r\n    }\r\n\r\n    toggleValue(e) {\r\n        this.setState({\r\n            [e.target.name]: !this.state[e.target.name]\r\n        });\r\n    }\r\n\r\n    onChange(notes) {\r\n        this.setState({\r\n            output: JSON.stringify(notes, null, 2),\r\n            notes\r\n        });\r\n    }\r\n\r\n    fetchMock() {\r\n        this.setState({\r\n            showMock: true\r\n        }, () => {\r\n            this.setState({\r\n                notes: mock.default\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let wrapperStyle = {};\r\n        if (this.state.showBound) {\r\n            wrapperStyle = {\r\n                height: '700px',\r\n                width: '700px',\r\n                background: 'rgba(0, 0, 0, 0.2)',\r\n                border: '2px solid #fff',\r\n                overflow: 'auto',\r\n                padding: '10px'\r\n            };\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Basic Notes</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Board/>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Sticky Notes</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={3}>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showTitle\" id=\"show-title\" value=\"show_title\" defaultChecked={this.state.showTitle} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-title\" className=\"cr\">Show Title</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showCustomColors\" id=\"custom-color\" value=\"show_custom_colors\" defaultChecked={this.state.showCustomColors} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"custom-color\" className=\"cr\">Custom Colors</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showTape\" id=\"show-tape\" value=\"show_tape\" defaultChecked={this.state.showTape} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-tape\" className=\"cr\">Show Tape</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showOutput\" id=\"show-output\" value=\"show_output\" defaultChecked={this.state.showOutput} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-output\" className=\"cr\">Show Output</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showFooter\" id=\"show-footer\" value=\"show_title\" defaultChecked={this.state.showFooter} onChange={this.toggleValue} />\r\n                                                <Form.Label htmlFor=\"show-footer\" className=\"cr\">Show Footer</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <div className=\"checkbox d-inline checkbox-fill checkbox-info\">\r\n                                                <Form.Control type=\"checkbox\" name=\"showMock\" id=\"show-mock\" value=\"show_mock\" defaultChecked={this.state.showMock} onChange={this.fetchMock} />\r\n                                                <Form.Label htmlFor=\"show-mock\" className=\"cr\">Load Mock Data</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col md={9}>\r\n                                        <Stickies\r\n                                            notes={this.state.notes}\r\n                                            tape={this.state.showTape}\r\n                                            style={{ float: 'left' }}\r\n                                            colors={this.state.showCustomColors ? this.state.colors : undefined}\r\n                                            title={this.state.showTitle}\r\n                                            footer={this.state.showFooter}\r\n                                            onChange={this.onChange}\r\n                                            wrapperStyle={wrapperStyle}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"config\">\r\n                                            <div className=\"output\" style={{ display: this.state.showOutput ? 'block' : 'none' }}>\r\n                                                <h3>Output JSON</h3>\r\n                                                <hr/>\r\n                                                <div style={{height: '500px'}}>\r\n                                                    <PerfectScrollbar>\r\n                                                        <Prism code={this.state.output} language=\"json\" />\r\n                                                    </PerfectScrollbar>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notes;"],"names":["props","theme","require","_jsx","Highlight","defaultProps","code","language","children","_ref","className","style","tokens","getLineProps","getTokenProps","map","line","i","key","token","Note","Component","constructor","super","this","state","editing","updatePosition","position","left","xPos","randomBetween","window","innerWidth","top","yPos","innerHeight","componentWillMount","componentWillUpdate","nextProps","onDragStart","e","index","dataTransfer","setData","min","max","Math","ceil","random","edit","setState","save","onChange","newText","value","remove","onRemove","renderNoteBody","content","draggable","onDoubleClick","_jsxs","onClick","renderDisplay","renderForm","ref","defaultValue","render","initialNotes","note","Board","notes","JSON","parse","localStorage","getItem","length","single","add","saveToStorage","setItem","stringify","nextId","uniqueId","text","push","id","update","splice","renderNotes","bind","onDrag","onDragOver","preventDefault","onDrop","noteId","getData","clientX","clientY","mock","Notes","React","showTape","showOutput","showTitle","showFooter","output","colors","showCustomColors","showMock","toggleValue","fetchMock","target","name","default","wrapperStyle","showBound","height","width","background","border","overflow","padding","Aux","Row","Col","Card","Header","Title","as","Body","md","Form","Group","Control","type","defaultChecked","Label","htmlFor","Stickies","tape","float","undefined","title","footer","display","PerfectScrollbar","Prism"],"sourceRoot":""}