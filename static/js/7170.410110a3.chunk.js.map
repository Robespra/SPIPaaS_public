{"version":3,"file":"static/js/7170.410110a3.chunk.js","mappings":"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","sources":["App/components/AnimatedModal.js","Demo/Forms/FormsValidation.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from \"react-animated-modal\";\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nclass AnimatedModal extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Modal\r\n                    visible={this.props.showModal}\r\n                    closemodal={this.props.modalClosed}\r\n                    type={this.props.animation}\r\n                >\r\n                    {this.props.children}\r\n                </Modal>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnimatedModal;","import React from 'react';\r\nimport {Row, Col, Card, Form, Button} from 'react-bootstrap';\r\nimport { ValidationForm, TextInput, BaseFormControl, SelectGroup, FileInput, Checkbox, Radio } from 'react-bootstrap4-form-validation';\r\nimport MaskedInput from 'react-text-mask';\r\nimport validator from 'validator';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport AnimatedModal from \"../../App/components/AnimatedModal\";\r\n\r\nclass MaskWithValidation extends BaseFormControl {\r\n    constructor(props){\r\n        super(props);\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    getInputRef(){\r\n        return this.inputRef.current.inputElement;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.checkError();\r\n        if(this.props.onChange) this.props.onChange(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <MaskedInput ref={this.inputRef} {...this.filterProps()} onChange={this.handleChange}/>\r\n                { this.displayErrorMessage() }\r\n                { this.displaySuccessMessage() }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nclass FormsValidation extends React.Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        phone:\"\",\r\n        description: \"\",\r\n        url: \"\",\r\n        gear: \"\",\r\n        basic: \"\",\r\n        custom: \"\",\r\n        chkBasic: false,\r\n        chkCustom: false,\r\n        checkMeSwitch: false,\r\n        showModal: false\r\n    };\r\n\r\n    handleCheckboxChange = (e, value) => {\r\n        this.setState({\r\n            [e.target.name]: value\r\n        })\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e, formData, inputs) => {\r\n        e.preventDefault();\r\n        //alert(JSON.stringify(formData, null, 2));\r\n        this.setState({ showModal: true });\r\n    };\r\n\r\n    handleErrorSubmit = (e, formData, errorInputs) => {\r\n        //console.log(errorInputs);\r\n    };\r\n\r\n    matchPassword = (value) => {\r\n        return value && value === this.state.password;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Form Validation</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <ValidationForm onSubmit={this.handleSubmit} onErrorSubmit={this.handleErrorSubmit}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"firstName\">First name</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"firstName\"\r\n                                                id=\"firstName\"\r\n                                                placeholder=\"First Name\"\r\n                                                required value={this.state.firstName}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"lastName\">Last name</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"lastName\"\r\n                                                id=\"lastName\"\r\n                                                placeholder=\"Last Name\"\r\n                                                minLength=\"4\"\r\n                                                value={this.state.lastName}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                placeholder=\"Email Address\"\r\n                                                validator={validator.isEmail}\r\n                                                errorMessage={{validator:\"Please enter a valid email\"}}\r\n                                                value={this.state.email}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                required\r\n                                                pattern=\"(?=.*[A-Z]).{6,}\"\r\n                                                errorMessage={{required:\"Password is required\", pattern: \"Password should be at least 6 characters and contains at least one upper case letter\"}}\r\n                                                value={this.state.password}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"confirmPassword\">Confirm Password</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"confirmPassword\"\r\n                                                id=\"confirmPassword\"\r\n                                                type=\"password\"\r\n                                                placeholder=\"Confirm Password\"\r\n                                                required\r\n                                                validator={this.matchPassword}\r\n                                                errorMessage={{required:\"Confirm password is required\", validator: \"Password does not match\"}}\r\n                                                value={this.state.confirmPassword}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"phone\">Phone</Form.Label>\r\n                                            <MaskWithValidation\r\n                                                name=\"phone\"\r\n                                                id=\"phone\"\r\n                                                placeholder=\"Contact Number\"\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                validator={(value) => value === \"(123) 456-7890\"}\r\n                                                value={this.state.phone}\r\n                                                onChange={this.handleChange}\r\n                                                successMessage=\"Looks good!\"\r\n                                                errorMessage={{validator: \"Please enter (123) 456-7890\"}}\r\n                                                mask={['(', /[1-9]/, /[0-9]/, /[0-9]/, ')', ' ', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"url\">URL</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"url\"\r\n                                                id=\"url\"\r\n                                                type=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                required\r\n                                                pattern=\"^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$\"\r\n                                                errorMessage={{required:\"URL is required\", pattern: 'URL is invalid.'}}\r\n                                                value={this.state.url}\r\n                                                onChange={this.handleChange}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"gear\">Gear</Form.Label>\r\n                                            <SelectGroup\r\n                                                name=\"gear\"\r\n                                                id=\"gear\"\r\n                                                value={this.state.gear}\r\n                                                required\r\n                                                errorMessage=\"Please select a gear.\"\r\n                                                onChange={this.handleChange}>\r\n                                                <option value=\"\">Please select a gear...</option>\r\n                                                <optgroup label=\"Climbing\">\r\n                                                    <option value=\"pitons\">Pitons</option>\r\n                                                    <option value=\"cams\">Cams</option>\r\n                                                    <option value=\"nuts\">Nuts</option>\r\n                                                    <option value=\"bolts\">Bolts</option>\r\n                                                    <option value=\"stoppers\">Stoppers</option>\r\n                                                    <option value=\"sling\">Sling</option>\r\n                                                </optgroup>\r\n                                                <optgroup label=\"Skiing\">\r\n                                                    <option value=\"skis\">Skis</option>\r\n                                                    <option value=\"skins\">Skins</option>\r\n                                                    <option value=\"poles\">Poles</option>\r\n                                                </optgroup>\r\n                                            </SelectGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm=\"12\">\r\n                                            <Form.Label htmlFor=\"description\">Description</Form.Label>\r\n                                            <TextInput\r\n                                                name=\"description\"\r\n                                                id=\"description\"\r\n                                                placeholder=\"About Us\"\r\n                                                multiline\r\n                                                required\r\n                                                value={this.state.description}\r\n                                                onChange={this.handleChange}\r\n                                                rows=\"3\"\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} sm=\"6\" className=\"mb-5\">\r\n                                            <Form.Label htmlFor=\"description\">Switch</Form.Label>\r\n                                            <div className=\"switch\">\r\n                                                <Checkbox name=\"check-me\" label='' id=\"check-me\" defaultValue={this.state.checkMeSwitch} required inline onChange={this.handleCheckboxChange} />\r\n                                                <Form.Label>Check me</Form.Label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"upload_avatar\">Upload Avatar</Form.Label>\r\n                                            <div className=\"custom-file\">\r\n                                                <FileInput\r\n                                                    name=\"avatar\"\r\n                                                    id=\"avatar\"\r\n                                                    required\r\n                                                    fileType={[\"png\", \"jpg\", \"jpeg\"]}\r\n                                                    maxFileSize=\"100 kb\"\r\n                                                    errorMessage={\r\n                                                        { required: \"Please upload a file\",\r\n                                                            fileType:\"Only .png or .jpg file is allowed\",\r\n                                                            maxFileSize: \"Max file size is 100 kb\"\r\n                                                        }\r\n                                                    }/>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"basic\">Radios</Form.Label>\r\n                                            <Radio.RadioGroup\r\n                                                name=\"basic\"\r\n                                                required\r\n                                                valueSelected={this.state.basic}\r\n                                                inline={false}\r\n                                                onChange={this.handleCheckboxChange}>\r\n                                                <Radio.RadioItem id=\"radio1\" label=\"Option one is this and that—be sure to include why it's great\" value=\"1\" />\r\n                                                <Radio.RadioItem id=\"radio2\" label=\"Option two can be something else and selecting it will deselect option one\" value=\"2\" />\r\n                                                <Radio.RadioItem id=\"radio3\" label=\"Option three is disabled\" value=\"3\" />\r\n                                            </Radio.RadioGroup>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"custom\">Custom Radios</Form.Label>\r\n                                            <div className=\"custom-controls-stacked radio\">\r\n                                                <Radio.RadioGroup\r\n                                                    name=\"custom\"\r\n                                                    required\r\n                                                    valueSelected={this.state.custom}\r\n                                                    inline={false}\r\n                                                    onChange={this.handleChange}>\r\n                                                    <Radio.RadioItem id=\"radio4\" label=\"Option one is this and that—be sure to include why it's great\" value=\"1\" />\r\n                                                    <Radio.RadioItem id=\"radio5\" label=\"Option two can be something else and selecting it will deselect option one\" value=\"2\" />\r\n                                                    <Radio.RadioItem id=\"radio6\" label=\"Option three is disabled\" value=\"3\" />\r\n                                                </Radio.RadioGroup>\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"chkBasic\">Basic Checkbox</Form.Label>\r\n                                            <Checkbox name=\"chkBasic\" label=\"Check me out\" id=\"chkBasic\" value={this.state.chkBasic} required onChange={this.handleCheckboxChange} />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\">\r\n                                            <Form.Label htmlFor=\"chkCustom\">Custom Checkbox</Form.Label>\r\n                                            <div className=\"checkbox\">\r\n                                                <Checkbox name=\"chkCustom\" label=\"Check me\" id=\"chkCustom\" value={this.state.chkCustom} required onChange={this.handleCheckboxChange} />\r\n                                            </div>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} sm={12} className=\"mt-3\">\r\n                                            <Button type=\"submit\">Submit</Button>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                </ValidationForm>\r\n                                <AnimatedModal animation='slideInDown' showModal={this.state.showModal} modalClosed={() => this.setState({ showModal: false })}>\r\n                                    <Card>\r\n                                        <Card.Header as=\"h5\" className=\"theme-bg2\">\r\n                                            User Information\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            <ul>\r\n                                                <li><strong>Full Name:</strong> {this.state.firstName} {this.state.lastName}</li>\r\n                                                <li><strong>Email:</strong> {this.state.email}</li>\r\n                                                <li><strong>Password:</strong> Yes</li>\r\n                                                <li><strong>Phone:</strong> {this.state.phone}</li>\r\n                                                <li><strong>Website:</strong> {this.state.url}</li>\r\n                                                <li><strong>Gear:</strong> {this.state.gear}</li>\r\n                                                <li><strong>About:</strong> {this.state.description}</li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                        <Card.Footer className=\"text-center\">\r\n                                            <button onClick={() => this.setState({ showModal: false })} className=\"btn btn-theme2 md-close\">Close Me!!</button>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                </AnimatedModal>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormsValidation;"],"names":["AnimatedModal","React","render","_jsx","Aux","children","Modal","visible","this","props","showModal","closemodal","modalClosed","type","animation","MaskWithValidation","BaseFormControl","constructor","super","handleChange","e","checkError","onChange","inputRef","getInputRef","current","inputElement","_jsxs","MaskedInput","ref","filterProps","displayErrorMessage","displaySuccessMessage","FormsValidation","arguments","state","firstName","lastName","email","password","confirmPassword","phone","description","url","gear","basic","custom","chkBasic","chkCustom","checkMeSwitch","handleCheckboxChange","value","setState","target","name","handleSubmit","formData","inputs","preventDefault","handleErrorSubmit","errorInputs","matchPassword","Row","Col","Card","Header","Title","as","Body","ValidationForm","onSubmit","onErrorSubmit","Form","Group","md","Label","htmlFor","TextInput","id","placeholder","required","autoComplete","minLength","validator","errorMessage","pattern","className","successMessage","mask","SelectGroup","label","sm","multiline","rows","Checkbox","defaultValue","inline","FileInput","fileType","maxFileSize","Radio","RadioGroup","valueSelected","RadioItem","Button","Footer","onClick"],"sourceRoot":""}