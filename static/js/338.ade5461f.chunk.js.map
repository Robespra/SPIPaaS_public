{"version":3,"file":"static/js/338.ade5461f.chunk.js","mappings":"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","sources":["App/components/Notifications.js","Demo/UIElements/Advance/Notification.js"],"sourcesContent":["import React from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\nimport { ToastProvider, ToastConsumer } from 'react-toast-notifications';\r\nimport {Fade, Flip, Rotate, Zoom, Bounce, Slide, Roll, LightSpeed} from 'react-reveal';\r\n\r\nimport Jump from 'react-reveal/Jump';\r\nimport Flash from 'react-reveal/Flash';\r\nimport HeadShake from 'react-reveal/HeadShake';\r\nimport Jello from 'react-reveal/Jello';\r\nimport Pulse from 'react-reveal/Pulse';\r\nimport RubberBand from 'react-reveal/RubberBand';\r\nimport Shake from 'react-reveal/Shake';\r\nimport Spin from 'react-reveal/Spin';\r\nimport Swing from 'react-reveal/Swing';\r\nimport Tada from 'react-reveal/Tada';\r\nimport Wobble from 'react-reveal/Wobble';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\n\r\nconst AlertMessage = ({appearance, children, transitionDuration, transitionState, onDismiss, animation}) => {\r\n    const Ani = getAnimation(animation.type);\r\n    const direction = animation.direction;\r\n    return (\r\n        <Ani\r\n            left={direction === 'left'}\r\n            right={direction === 'right'}\r\n            top={direction === 'top'}\r\n            bottom={direction === 'bottom'}\r\n            when={transitionState === 'entered'}\r\n        >\r\n            <Alert variant={appearance} dismissible onClose={onDismiss}>\r\n                {children}\r\n            </Alert>\r\n        </Ani>\r\n    );\r\n};\r\n\r\nfunction getAnimation(type) {\r\n    switch (type) {\r\n        case 'fade':\r\n            return Fade;\r\n        case 'flip':\r\n            return Flip;\r\n        case 'rotate':\r\n            return Rotate;\r\n        case 'zoom':\r\n            return Zoom;\r\n        case 'bounce':\r\n            return Bounce;\r\n        case 'roll':\r\n            return Roll;\r\n        case 'light-speed':\r\n            return LightSpeed;\r\n        case 'jump':\r\n            return Jump;\r\n        case 'flash':\r\n            return Flash;\r\n        case 'head-shake':\r\n            return HeadShake;\r\n        case 'jello':\r\n            return Jello;\r\n        case 'pulse':\r\n            return Pulse;\r\n        case 'rubber-band':\r\n            return RubberBand;\r\n        case 'shake':\r\n            return Shake;\r\n        case 'spin':\r\n            return Spin;\r\n        case 'swing':\r\n            return Swing;\r\n        case 'tada':\r\n            return Tada;\r\n        case 'wobble':\r\n            return Wobble;\r\n        default:\r\n            return Slide;\r\n    }\r\n}\r\n\r\nclass Notifications extends React.Component {\r\n    render(){\r\n            return (\r\n                <Aux>\r\n                    <ToastProvider components={{Toast: AlertMessage}} placement={this.props.notification.placement} animation={this.props.notification.animation}>\r\n                        <ToastConsumer>\r\n                            {({add}) => {\r\n                                return (\r\n                                    <span onClick={() => add(this.props.notification.message, {\r\n                                        appearance: this.props.notification.variant,\r\n                                        autoDismiss: this.props.notification.autoDismiss\r\n                                    })}>\r\n                                        {this.props.children}\r\n                                    </span>\r\n                                );\r\n                            }}\r\n                        </ToastConsumer>\r\n                    </ToastProvider>\r\n                </Aux>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport {Row, Col, Card, Button, Form} from 'react-bootstrap';\r\nimport chroma from 'chroma-js';\r\nimport Select from 'react-select';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Notifications from '../../../App/components/Notifications';\r\n\r\nconst colourOptions = [\r\n    { value: 'inverse', label: 'Inverse', color: '#333' },\r\n    { value: 'primary', label: 'Primary', color: '#04a9f5' },\r\n    { value: 'info', label: 'Info', color: '#3ebfea' },\r\n    { value: 'success', label: 'Success', color: '#1de9b6' },\r\n    { value: 'warning', label: 'Warning', color: '#f4c22b' },\r\n    { value: 'danger', label: 'Danger', color: '#f44236' },\r\n    { value: 'dark', label: 'Dark', color: '#c7cbce' },\r\n    { value: 'light', label: 'Light', color: '#f2f2f2' }\r\n];\r\n\r\nconst potionOption = [\r\n    { value: 'top-left', label: 'Top Left' },\r\n    { value: 'top-right', label: 'Top Right' },\r\n    { value: 'top-center', label: 'Top Center' },\r\n    { value: 'bottom-left', label: 'Bottom Left' },\r\n    { value: 'bottom-right', label: 'Bottom Right' },\r\n    { value: 'bottom-center', label: 'Bottom Center' }\r\n];\r\n\r\nconst animationOption = [\r\n    { value: 'fade', label: 'Fade' },\r\n    { value: 'flip', label: 'Flip' },\r\n    { value: 'rotate', label: 'Rotate' },\r\n    { value: 'zoom', label: 'Zoom' },\r\n    { value: 'bounce', label: 'Bounce' },\r\n    { value: 'slide', label: 'Slide' },\r\n    { value: 'roll', label: 'Roll' },\r\n    { value: 'light-speed', label: 'Light Speed' },\r\n    { value: 'jump', label: 'Jump' },\r\n    { value: 'flash', label: 'Flash' },\r\n    { value: 'head-shake', label: 'Head Shake' },\r\n    { value: 'jello', label: 'Jello' },\r\n    { value: 'pulse', label: 'Pulse' },\r\n    { value: 'rubber-band', label: 'Rubber Band' },\r\n    { value: 'shake', label: 'Shake' },\r\n    { value: 'spin', label: 'Spin' },\r\n    { value: 'swing', label: 'Swing' },\r\n    { value: 'tada', label: 'Tada' },\r\n    { value: 'wobble', label: 'Wobble' },\r\n];\r\n\r\nconst dot = (color = '#ccc') => ({\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n\r\n    ':before': {\r\n        backgroundColor: color,\r\n        borderRadius: 10,\r\n        content: '\" \"',\r\n        display: 'block',\r\n        marginRight: 8,\r\n        height: 10,\r\n        width: 10,\r\n    },\r\n});\r\n\r\nconst colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled\r\n                ? null\r\n                : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\r\n            color: isDisabled\r\n                ? '#ccc'\r\n                : isSelected\r\n                    ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black'\r\n                    : data.color,\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n        };\r\n    },\r\n    input: styles => ({ ...styles, ...dot() }),\r\n    placeholder: styles => ({ ...styles, ...dot() }),\r\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\n\r\nclass AdvanceNotification extends React.Component {\r\n    state = {\r\n        variant: 'inverse',\r\n        placement: 'top-right',\r\n        autoDismiss: true,\r\n        animation: {type: 'slide', direction: 'top'},\r\n        message: 'Bootstrap Growl Turning standard Bootstrap alerts into awesome notification'\r\n    };\r\n\r\n    animationDirectionHandler = (direction) => {\r\n        this.setState({...this.state, animation: {...this.state.animation, direction: direction}})\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({message: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Growl Notification</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row className=\"justify-content-md-center\">\r\n                                    <Col sm={12} md={7}>\r\n                                        <Form.Group controlId=\"formPosition\">\r\n                                            <Form.Label>Position Variant</Form.Label>\r\n                                            <Select\r\n                                                defaultValue={potionOption[1]}\r\n                                                label=\"Select Position\"\r\n                                                options={potionOption}\r\n                                                onChange={({value}) => this.setState({placement: value})}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formColor\">\r\n                                            <Form.Label>Color Variant</Form.Label>\r\n                                            <Select\r\n                                                defaultValue={colourOptions[0]}\r\n                                                label=\"Select Variant\"\r\n                                                options={colourOptions}\r\n                                                styles={colourStyles}\r\n                                                onChange={({value}) => this.setState({variant: value})}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formAnimation\">\r\n                                            <Form.Label>Animation Type</Form.Label>\r\n                                            <Select\r\n                                                defaultValue={animationOption[5]}\r\n                                                label=\"Select Variant\"\r\n                                                options={animationOption}\r\n                                                onChange={({value}) => this.setState({...this.state, animation: {...this.state.animation, type: value}})}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formDirectionRight\">\r\n                                            <Form.Label>Animation Direction</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formDirectionRight\">\r\n                                            <div className=\"radio radio-primary d-inline\">\r\n                                                <input type=\"radio\" name=\"rdoDirection\" id=\"directionNone\" checked={this.state.animation.direction === 'none'} onChange={({value}) => this.animationDirectionHandler('none')} />\r\n                                                <label htmlFor=\"directionNone\" className=\"cr\">None</label>\r\n                                            </div>\r\n                                            <div className=\"radio radio-primary d-inline\">\r\n                                                <input type=\"radio\" name=\"rdoDirection\" id=\"directionRight\" checked={this.state.animation.direction === 'right'} onChange={({value}) => this.animationDirectionHandler('right')} />\r\n                                                <label htmlFor=\"directionRight\" className=\"cr\">Right</label>\r\n                                            </div>\r\n                                            <div className=\"radio radio-primary d-inline\">\r\n                                                <input type=\"radio\" name=\"rdoDirection\" id=\"directionLeft\" checked={this.state.animation.direction === 'left'} onChange={({value}) => this.animationDirectionHandler('left')} />\r\n                                                <label htmlFor=\"directionLeft\" className=\"cr\">Left</label>\r\n                                            </div>\r\n                                            <div className=\"radio radio-primary d-inline\">\r\n                                                <input type=\"radio\" name=\"rdoDirection\" id=\"directionTop\" checked={this.state.animation.direction === 'top'} onChange={({value}) => this.animationDirectionHandler('top')} />\r\n                                                <label htmlFor=\"directionTop\" className=\"cr\">Top</label>\r\n                                            </div>\r\n                                            <div className=\"radio radio-primary d-inline\">\r\n                                                <input type=\"radio\" name=\"rdoDirection\" id=\"directionBottom\" checked={this.state.animation.direction === 'bottom'} onChange={({value}) => this.animationDirectionHandler('bottom')} />\r\n                                                <label htmlFor=\"directionBottom\" className=\"cr\">Bottom</label>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"formBasicEmail\">\r\n                                            <div className=\"switch switch-primary d-inline m-r-10\">\r\n                                                <input type=\"checkbox\" id=\"icon-colored\" checked={this.state.autoDismiss} onChange={() => this.setState(prevState => {return {autoDismiss: !prevState.autoDismiss}})} />\r\n                                                <label htmlFor=\"icon-colored\" className=\"cr\" />\r\n                                            </div>\r\n                                            <Form.Label>Auto Dismiss</Form.Label>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                            <Form.Label>Message</Form.Label>\r\n                                            <Form.Control as=\"textarea\" rows=\"3\" value={this.state.message} onChange={this.handleChange}/>\r\n                                        </Form.Group>\r\n                                        <Notifications notification={this.state}><Button>Add Notification</Button></Notifications>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvanceNotification;\r\n"],"names":["AlertMessage","_ref","appearance","children","transitionDuration","transitionState","onDismiss","animation","Ani","type","Fade","Flip","Rotate","Zoom","Bounce","Roll","LightSpeed","Jump","Flash","HeadShake","Jello","Pulse","RubberBand","Shake","Spin","Swing","Tada","Wobble","Slide","getAnimation","direction","_jsx","left","right","top","bottom","when","Alert","variant","dismissible","onClose","Notifications","React","render","Aux","ToastProvider","components","Toast","placement","this","props","notification","ToastConsumer","_ref2","add","onClick","message","autoDismiss","colourOptions","value","label","color","potionOption","animationOption","dot","alignItems","display","backgroundColor","arguments","length","undefined","borderRadius","content","marginRight","height","width","colourStyles","control","styles","option","data","isDisabled","isFocused","isSelected","chroma","alpha","css","cursor","input","placeholder","singleValue","AdvanceNotification","constructor","state","animationDirectionHandler","setState","handleChange","event","target","Row","Col","_jsxs","Card","Header","Title","as","Body","className","sm","md","Form","Group","controlId","Label","Select","defaultValue","options","onChange","_ref3","_ref4","_ref5","name","id","checked","_ref6","htmlFor","_ref7","_ref8","_ref9","_ref10","prevState","Control","rows","Button"],"sourceRoot":""}