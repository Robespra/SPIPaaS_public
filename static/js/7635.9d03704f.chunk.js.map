{"version":3,"file":"static/js/7635.9d03704f.chunk.js","mappings":"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","sources":["App/components/MainCard.js","Demo/UIElements/Advance/Tour.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-vertical\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Refresh data </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        if (this.props.success) {\r\n            cardClass = [...cardClass, 'monitor_success'];\r\n        }\r\n\r\n        if (this.props.erroneous) {\r\n            cardClass = [...cardClass, 'monitor_error'];\r\n        }\r\n\r\n        if (this.props.notdeployed) {\r\n            cardClass = [...cardClass, 'monitor_notdeployed'];\r\n        }\r\n\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n","import React from 'react';\r\nimport {Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Tour from 'reactour';\r\nimport Joyride, { STATUS } from 'react-joyride';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport MainCard from \"../../../App/components/MainCard\";\r\n\r\nconst steps = [\r\n    {\r\n        selector: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n    },\r\n    {\r\n        selector: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        selector: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        selector: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        selector: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nconst stepsRide = [\r\n    {\r\n        content: <h5>Let's begin our journey!</h5>,\r\n        placement: 'center',\r\n        locale: { skip: <strong aria-label=\"skip\">S-K-I-P</strong> },\r\n        target: 'body',\r\n    },\r\n    {\r\n        target: '.tour-1',\r\n        content: 'Click hear customize basic card layout',\r\n        placement: 'top'\r\n    },\r\n    {\r\n        target: '.card-option',\r\n        content: 'Click hear open card options',\r\n    },\r\n    {\r\n        target: '.displayChatbox',\r\n        content: 'Click chat open chat conversation',\r\n    },\r\n    {\r\n        target: '.mobile-menu',\r\n        content: 'Click to see collapse menu layout',\r\n    },\r\n    {\r\n        target: '.pcoded-menu-caption',\r\n        content: 'Menu caption',\r\n    }\r\n];\r\n\r\nclass AdvanceTour extends React.Component {\r\n    state = {\r\n        isTourOpen: false,\r\n        run: false,\r\n        steps: stepsRide\r\n    };\r\n\r\n    handleJoyrideCallback = data => {\r\n        const { status } = data;\r\n\r\n        if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\r\n            this.setState({ run: false });\r\n        }\r\n\r\n        /*console.groupCollapsed(type);\r\n        console.log(data);\r\n        console.groupEnd();*/\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as=\"h5\">Tour</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button onClick={() => this.setState({isTourOpen: true})}>Start Basic Tour</Button>\r\n                                <Button onClick={() => this.setState({run: true})}>Joy Ride</Button>\r\n                                <Tour\r\n                                    steps={steps}\r\n                                    isOpen={this.state.isTourOpen}\r\n                                    onRequestClose={() => this.setState({isTourOpen: false})} />\r\n                                <Joyride\r\n                                    callback={this.handleJoyrideCallback}\r\n                                    run={this.state.run}\r\n                                    continuous\r\n                                    scrollToFirstStep\r\n                                    showProgress\r\n                                    showSkipButton\r\n                                    steps={this.state.steps}\r\n                                    styles={{\r\n                                        options: {\r\n                                            zIndex: 10000,\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <MainCard isOption title=\"Hello tour\" cardClass=\"tour-1 card-test\">\r\n                            <h1>H1 Datta Able</h1>\r\n                            <h2>H2 Datta Able</h2>\r\n                            <h3>H3 Datta Able</h3>\r\n                            <h4>H4 Datta Able</h4>\r\n                            <h5>H5 Datta Able</h5>\r\n                            <h6>H6 Datta Able</h6>\r\n                            <Card.Text>Paragraph Datta Able</Card.Text>\r\n                            <Card.Text>Paragraph Datta Able</Card.Text>\r\n                        </MainCard>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvanceTour;"],"names":["MainCard","Component","constructor","arguments","state","isOption","this","props","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","render","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","_jsx","className","children","_jsxs","Dropdown","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","Card","Header","Title","title","position","top","left","right","width","windowWidth","height","windowHeight","success","erroneous","notdeployed","join","style","Collapse","in","Body","Aux","windowSize","steps","selector","content","stepsRide","placement","locale","skip","target","AdvanceTour","React","isTourOpen","run","handleJoyrideCallback","data","status","STATUS","FINISHED","SKIPPED","includes","Row","Col","Button","Tour","isOpen","onRequestClose","Joyride","callback","continuous","scrollToFirstStep","showProgress","showSkipButton","styles","options","zIndex","Text"],"sourceRoot":""}