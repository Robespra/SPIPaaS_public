{"version":3,"file":"static/js/6727.fc85e454.chunk.js","mappings":"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","sources":["Demo/UIElements/Advance/Alert.js"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\n\r\nclass AdvanceAlert extends React.Component {\r\n    state = {\r\n        isBasic: false,\r\n        isSuccess: false,\r\n        isWarning: false,\r\n        isError: false,\r\n        isInfo: false,\r\n        isConfirm: false,\r\n        isConfirmSuccess: false,\r\n        isConfirmCancel: false\r\n    };\r\n\r\n    sweetAlertHandler = (alert) => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: alert.title,\r\n            text: alert.text,\r\n            type: alert.type\r\n        });\r\n    };\r\n\r\n    sweetConfirmHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: 'Once deleted, you will not be able to recover this imaginary file!',\r\n            type: 'warning',\r\n            showCloseButton: true,\r\n            showCancelButton: true\r\n        }).then((willDelete) => {\r\n            if (willDelete.value) {\r\n                return MySwal.fire('', 'Poof! Your imaginary file has been deleted!', 'success');\r\n            } else {\r\n                return MySwal.fire('', 'Your imaginary file is safe!', 'error');\r\n            }\r\n        });\r\n    };\r\n\r\n    sweetPromptHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            text: 'Write something here:',\r\n            input: 'text',\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                return MySwal.fire('', `You Typed: ${result.value}`);\r\n            } else {\r\n                return MySwal.fire('Invalid!', 'No message write', 'error');\r\n            }\r\n        });\r\n    };\r\n\r\n    sweetAjaxHandler = () => {\r\n        const MySwal = withReactContent(Swal);\r\n        MySwal.fire({\r\n            text: 'Submit your Github username',\r\n            input: 'text',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Look up',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (login) => {\r\n                if (login) {\r\n                    return fetch(`//api.github.com/users/${login}`)\r\n                        .then(response => {\r\n                            if (!response.ok) {\r\n                                throw new Error(response.statusText);\r\n                            }\r\n                            return response.json();\r\n                        })\r\n                        .catch(error => {\r\n                            Swal.showValidationMessage(\r\n                                `Request failed: ${error}`\r\n                            );\r\n                        });\r\n                } else {\r\n                    return MySwal.fire('Invalid!', 'No name enter', 'error');\r\n                }\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then((result) => {\r\n            if (result.value && result.value.login !== undefined) {\r\n                return MySwal.fire({\r\n                    title: `${result.value.login}'s avatar`,\r\n                    imageUrl: result.value.avatar_url\r\n                });\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title>Alerts</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button onClick={() => this.sweetAlertHandler({title: '', type: '', text: 'Hello World!'})}>Basic</Button>\r\n                                <Button variant=\"success\" onClick={() => this.sweetAlertHandler({title: 'Good job!', type: 'success', text: 'You clicked the button!'})}>Success</Button>\r\n                                <Button variant=\"danger\" onClick={() => this.sweetAlertHandler({title: 'Good job!', type: 'error', text: 'You clicked the button!'})}>Error</Button>\r\n                                <Button variant=\"warning\" onClick={() => this.sweetAlertHandler({title: 'Good job!', type: 'warning', text: 'You clicked the button!'})}>Warning</Button>\r\n                                <Button variant=\"info\" onClick={() => this.sweetAlertHandler({title: 'Good job!', type: 'info', text: 'You clicked the button!'})}>Info</Button>\r\n                                <Button onClick={this.sweetConfirmHandler}>Confirm</Button>\r\n                                <Button onClick={this.sweetPromptHandler}>Prompt</Button>\r\n                                <Button onClick={this.sweetAjaxHandler}>Ajax</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvanceAlert;"],"names":["AdvanceAlert","React","constructor","arguments","state","isBasic","isSuccess","isWarning","isError","isInfo","isConfirm","isConfirmSuccess","isConfirmCancel","sweetAlertHandler","alert","withReactContent","Swal","fire","title","text","type","sweetConfirmHandler","MySwal","showCloseButton","showCancelButton","then","willDelete","value","sweetPromptHandler","input","result","sweetAjaxHandler","inputAttributes","autocapitalize","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","allowOutsideClick","undefined","imageUrl","avatar_url","render","_jsx","Aux","children","Row","Col","_jsxs","Card","Header","Title","Body","Button","onClick","this","variant"],"sourceRoot":""}