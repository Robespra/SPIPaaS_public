{"version":3,"file":"static/js/5257.f63f6c10.chunk.js","mappings":"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","sources":["App/components/Gallery.js","Demo/AppPages/Gallery/GalleryGrid.js"],"sourcesContent":["import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { css, StyleSheet } from 'aphrodite/no-important';\r\nimport Lightbox from 'react-images-texts-videos';\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass Gallery extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        let itemType;\r\n\r\n        if (this.props.images) {\r\n            itemType = 'images'\r\n        } else if (this.props.texts) {\r\n            itemType = 'texts'\r\n        } else {\r\n            itemType = 'videos'\r\n        }\r\n\r\n        this.state = {\r\n            lightboxIsOpen: false,\r\n            currentItem: 0,\r\n            itemType: itemType,\r\n        };\r\n\r\n        this.closeLightbox = this.closeLightbox.bind(this);\r\n        this.gotoNext = this.gotoNext.bind(this);\r\n        this.gotoPrevious = this.gotoPrevious.bind(this);\r\n        this.gotoItem = this.gotoItem.bind(this);\r\n        this.handleClickItem = this.handleClickItem.bind(this);\r\n        this.openLightbox = this.openLightbox.bind(this);\r\n    }\r\n\r\n    openLightbox (event, index) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            currentItem: index,\r\n            lightboxIsOpen: true,\r\n        });\r\n    }\r\n\r\n    closeLightbox () {\r\n        this.setState({\r\n            currentItem: 0,\r\n            lightboxIsOpen: false,\r\n        });\r\n    }\r\n\r\n    gotoPrevious () {\r\n        this.setState({\r\n            currentItem: this.state.currentItem - 1,\r\n        });\r\n    }\r\n\r\n    gotoNext () {\r\n        this.setState({\r\n            currentItem: this.state.currentItem + 1,\r\n        });\r\n    }\r\n\r\n    gotoItem (index) {\r\n        this.setState({\r\n            currentItem: index,\r\n        });\r\n    }\r\n\r\n    handleClickItem () {\r\n        if (this.state.currentItem === this.props[this.state.itemType].length - 1) return;\r\n\r\n        this.gotoNext();\r\n    }\r\n\r\n    renderGallery () {\r\n        if (this.state.itemType === 'images') {\r\n            const { images } = this.props;\r\n\r\n            if (!images) return;\r\n\r\n            let gallery;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <a\r\n                            href={obj.src}\r\n                            className={css(classes.thumbnail, classes[obj.orientation])}\r\n                            onClick={(e) => this.openLightbox(e, i)}\r\n                            key={i}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = images.filter(i => i.useForDemo).map((obj, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <a\r\n                                href={obj.src}\r\n                                className={css(classes.thumbnail, classes[obj.orientation])}\r\n                                onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={obj.thumbnail} className={css(classes.source)} alt=\"\" />\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    );\r\n                });\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        } else if (this.state.itemType === 'texts') {\r\n            const { texts } = this.props;\r\n            let gallery;\r\n            if (!texts) return;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <p className={css(classes.text_thumbail)} key={i} onClick={(e) => this.openLightbox(e, i)}>\r\n                            {text}\r\n                        </p>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = texts.map((text, i) => {\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <p\r\n                                className={css(classes.text_thumbail)}\r\n                                onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                {text}\r\n                            </p>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            let gallery;\r\n            const { videos } = this.props;\r\n\r\n            if (!videos) return;\r\n\r\n            if (this.props.singleItem) {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <a href={DEMO.BLANK_LINK}\r\n                           className={css(classes.video_thumbnail)}\r\n                           key={i}\r\n                           onClick={(e) => this.openLightbox(e, i)}\r\n                        >\r\n                            <div className='img-thumbnail'>\r\n                                <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        {gallery}\r\n                    </div>\r\n                );\r\n            } else {\r\n                gallery = videos.map((videoId, i) => {\r\n                    const videoThumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\r\n                    return (\r\n                        <Col xl={2} lg={3} md={4} sm={6} xs={12} key={i} className=\"mb-1\">\r\n                            <a href={DEMO.BLANK_LINK}\r\n                               className={css(classes.video_thumbnail)}\r\n                               onClick={(e) => this.openLightbox(e, i)}\r\n                            >\r\n                                <div className='img-thumbnail'>\r\n                                    <img src={videoThumbnail} className={css(classes.source_video)} alt=\"\" />\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    );\r\n                });\r\n\r\n                return (\r\n                    <div className={css(classes.gallery)}>\r\n                        <Row>\r\n                            {gallery}\r\n                        </Row>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <div className='section'>\r\n                {this.props.heading && <h2>{this.props.heading}</h2>}\r\n                {this.props.subheading && <p>{this.props.subheading}</p>}\r\n                {this.renderGallery()}\r\n                <Lightbox\r\n                    currentItem={this.state.currentItem}\r\n                    items={{type:this.state.itemType,items:this.props[this.state.itemType]}}\r\n                    isOpen={this.state.lightboxIsOpen}\r\n                    onClickImage={() => this.handleClickItem}\r\n                    onClickNext={this.gotoNext}\r\n                    onClickPrev={this.gotoPrevious}\r\n                    onClickThumbnail={() => this.gotoItem}\r\n                    onClose={this.closeLightbox}\r\n                    showThumbnails={this.props.showThumbnails}\r\n                    theme={this.props.theme}\r\n                    backdropClosesModal={this.props.backdropClosesModal}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGallery.displayName = 'Gallery';\r\n\r\nconst gutter = {\r\n    small: 2,\r\n    large: 4,\r\n};\r\nconst classes = StyleSheet.create({\r\n    gallery: {\r\n        marginRight: -gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            marginRight: -gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    thumbnail: {\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    video_thumbnail: {\r\n        width:'50%',\r\n        height: '258px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        lineHeight: 0,\r\n        paddingRight: gutter.small,\r\n        paddingBottom: gutter.small,\r\n        overflow: 'hidden',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingRight: gutter.large,\r\n            paddingBottom: gutter.large,\r\n        },\r\n    },\r\n\r\n    // anchor\r\n    text_thumbail: {\r\n        cursor: 'pointer',\r\n        height: '200px',\r\n        'text-align': 'justify',\r\n        'font-size': '16px',\r\n        width: '46%',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        boxSizing: 'border-box',\r\n        display: 'block',\r\n        float: 'left',\r\n        overflow: 'scroll',\r\n        border: 'solid 1px #E6E6E8',\r\n        'border-radius': '4px',\r\n        color: 'darkgray',\r\n\r\n        '@media (min-width: 500px)': {\r\n        },\r\n    },\r\n\r\n    // orientation\r\n    landscape: {\r\n        width: '30%',\r\n    },\r\n    square: {\r\n        paddingBottom: 0,\r\n        width: '40%',\r\n\r\n        '@media (min-width: 500px)': {\r\n            paddingBottom: 0,\r\n        },\r\n    },\r\n\r\n    // actual <img />\r\n    source: {\r\n        border: 0,\r\n        display: 'block',\r\n        height: 'auto',\r\n        maxWidth: '100%',\r\n        width: 'auto',\r\n    },\r\n\r\n\r\n    source_video: {\r\n        border: 0,\r\n        height: 'auto',\r\n        maxWidth: '90%',\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport {Row, Col, Card} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux/index\";\r\nimport Gallery from '../../../App/components/Gallery';\r\n\r\nimport thumb1 from '../../../assets/images/gallery-grid/img-grd-gal-1.jpg';\r\nimport thumb2 from '../../../assets/images/gallery-grid/img-grd-gal-2.jpg';\r\nimport thumb3 from '../../../assets/images/gallery-grid/img-grd-gal-3.jpg';\r\nimport thumb4 from '../../../assets/images/gallery-grid/img-grd-gal-4.jpg';\r\nimport thumb5 from '../../../assets/images/gallery-grid/img-grd-gal-5.jpg';\r\nimport thumb6 from '../../../assets/images/gallery-grid/img-grd-gal-6.jpg';\r\n\r\nclass GalleryGrid extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Image Grid</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb1, thumbnail: thumb1, caption:\"Datta Image 1\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb2, thumbnail: thumb2, caption:\"Datta Image 2\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb3, thumbnail: thumb3, caption:\"Datta Image 3\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb4, thumbnail: thumb4, caption:\"Datta Image 4\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb5, thumbnail: thumb5, caption:\"Datta Image 5\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery images={[{src: thumb6, thumbnail: thumb6, caption:\"Datta Image 6\", useForDemo:true}]} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title as='h5'>Video Grid</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['0LjlawWMXCw']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['ZQ264Axbjxg']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['bYbV_PFdfQs']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['IkyZHPnfFnE']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['HjV2aWgavdo']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                    <Col xl={4} md={6} className='mb-4'>\r\n                                        <Gallery videos={['Rh03jAsRHQM']} backdropClosesModal singleItem />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default GalleryGrid;"],"names":["Gallery","React","constructor","props","itemType","super","this","images","texts","state","lightboxIsOpen","currentItem","closeLightbox","bind","gotoNext","gotoPrevious","gotoItem","handleClickItem","openLightbox","event","index","preventDefault","setState","length","renderGallery","gallery","singleItem","filter","i","useForDemo","map","obj","_jsx","href","src","className","css","classes","thumbnail","orientation","onClick","e","children","source","alt","Col","xl","lg","md","sm","xs","Row","text","text_thumbail","videos","videoId","videoThumbnail","DEMO","BLANK_LINK","video_thumbnail","source_video","render","_jsxs","heading","subheading","Lightbox","items","type","isOpen","onClickImage","onClickNext","onClickPrev","onClickThumbnail","onClose","showThumbnails","theme","backdropClosesModal","displayName","gutter","StyleSheet","create","marginRight","overflow","boxSizing","display","float","lineHeight","paddingRight","paddingBottom","width","height","cursor","padding","margin","border","color","landscape","square","maxWidth","GalleryGrid","Aux","Card","Header","Title","as","Body","thumb1","caption","thumb2","thumb3","thumb4","thumb5","thumb6"],"sourceRoot":""}